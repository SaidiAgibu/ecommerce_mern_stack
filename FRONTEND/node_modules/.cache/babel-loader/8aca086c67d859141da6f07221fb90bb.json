{"ast":null,"code":"var _jsxFileName = \"/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/organisms/Footer/Accordion.js\";\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport plusIcon from \"assets/icons/plus.svg\";\nimport minusIcon from \"assets/icons/minus.svg\";\nimport PropTypes from 'prop-types';\nconst Header = styled.div`\n  position: relative;\n  display: block;\n  padding: 20px 0;\n  font-weight: ${({\n  theme\n}) => theme.bold};\n  color: ${({\n  theme\n}) => theme.white200};\n  font-size: ${({\n  theme\n}) => theme.fontSize.sm};\n  ${({\n  theme\n}) => theme.mq.md} {\n    font-size: ${({\n  theme\n}) => theme.fontSize.l};\n  }\n  &:after {\n    content: url(${plusIcon});\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    right: 0;\n    ${({\n  theme\n}) => theme.mq.md} {\n      display: none;\n    }\n  }\n`;\nconst List = styled.ul`\n  overflow: hidden;\n  max-height: 0px;\n  opacity: 0;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  transition: opacity 0.3s, max-height 0.5s;\n`;\nconst ListItem = styled.li`\n  padding: 10px 0;\n`;\nconst StyledLink = styled(Link)`\n  color: ${({\n  theme\n}) => theme.gray100};\n  transition: 0.15s;\n  text-decoration: none;\n  &:hover {\n    color: ${({\n  theme\n}) => theme.white};\n  }\n`;\nconst Wrapper = styled.div`\n  cursor: pointer;\n  ${({\n  theme\n}) => theme.mq.md} {\n    cursor: auto;\n  }\n  ${({\n  isActive\n}) => isActive && css`\n      & > ${List} {\n        max-height: 400px;\n        opacity: 1;\n      }\n      & > ${Header}:after {\n        content: url(${minusIcon});\n      }\n    `};\n`;\n\nconst Accordion = ({\n  active,\n  title,\n  links\n}) => {\n  const [isVisible, setVisibility] = useState(false);\n\n  const toggle = () => {\n    if (!active) setVisibility(!isVisible);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    onClick: toggle,\n    isActive: isVisible || active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, links.map(({\n    name,\n    path\n  }) => /*#__PURE__*/React.createElement(ListItem, {\n    key: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    to: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, name)))));\n};\n\nAccordion.propTypes = {\n  title: PropTypes.string.isRequired,\n  active: PropTypes.bool,\n  links: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired\n};\nAccordion.defaultProps = {\n  active: false\n};\nexport default Accordion;","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/organisms/Footer/Accordion.js"],"names":["React","useState","styled","css","Link","PropTypes","Header","div","theme","bold","white200","fontSize","sm","mq","md","l","plusIcon","List","ul","ListItem","li","StyledLink","gray100","white","Wrapper","isActive","minusIcon","Accordion","active","title","links","isVisible","setVisibility","toggle","map","name","path","propTypes","string","isRequired","bool","arrayOf","objectOf","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport plusIcon from 'assets/icons/plus.svg';\nimport minusIcon from 'assets/icons/minus.svg';\nimport PropTypes from 'prop-types';\n\nconst Header = styled.div`\n  position: relative;\n  display: block;\n  padding: 20px 0;\n  font-weight: ${({ theme }) => theme.bold};\n  color: ${({ theme }) => theme.white200};\n  font-size: ${({ theme }) => theme.fontSize.sm};\n  ${({ theme }) => theme.mq.md} {\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n  &:after {\n    content: url(${plusIcon});\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    right: 0;\n    ${({ theme }) => theme.mq.md} {\n      display: none;\n    }\n  }\n`;\n\nconst List = styled.ul`\n  overflow: hidden;\n  max-height: 0px;\n  opacity: 0;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  transition: opacity 0.3s, max-height 0.5s;\n`;\n\nconst ListItem = styled.li`\n  padding: 10px 0;\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.gray100};\n  transition: 0.15s;\n  text-decoration: none;\n  &:hover {\n    color: ${({ theme }) => theme.white};\n  }\n`;\n\nconst Wrapper = styled.div`\n  cursor: pointer;\n  ${({ theme }) => theme.mq.md} {\n    cursor: auto;\n  }\n  ${({ isActive }) =>\n    isActive &&\n    css`\n      & > ${List} {\n        max-height: 400px;\n        opacity: 1;\n      }\n      & > ${Header}:after {\n        content: url(${minusIcon});\n      }\n    `};\n`;\n\nconst Accordion = ({ active, title, links }) => {\n  const [isVisible, setVisibility] = useState(false);\n\n  const toggle = () => {\n    if (!active) setVisibility(!isVisible);\n  };\n\n  return (\n    <Wrapper onClick={toggle} isActive={isVisible || active}>\n      <Header>{title}</Header>\n      <List>\n        {links.map(({ name, path }) => (\n          <ListItem key={name}>\n            <StyledLink to={path}>{name}</StyledLink>\n          </ListItem>\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n\nAccordion.propTypes = {\n  title: PropTypes.string.isRequired,\n  active: PropTypes.bool,\n  links: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n};\n\nAccordion.defaultProps = {\n  active: false,\n};\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}