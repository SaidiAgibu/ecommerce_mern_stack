{"ast":null,"code":"var _jsxFileName = \"/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/organisms/Navigation/Navigation.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { NavigationContext } from 'context/NavigationContext';\nimport Sidenav from 'components/organisms/Navigation/Sidenav';\nimport Topnav from 'components/organisms/Navigation/Topnav';\nimport ReturnToTop from 'components/organisms/Navigation/ReturnToTop';\nimport SideCart from 'components/organisms/SideCart/SideCart';\nimport ProgressBar from 'components/atoms/ProgressBar/ProgressBar';\nimport Notifications from 'components/organisms/Navigation/Notifications';\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst Navigation = () => {\n  const [scrollTop, setScrollTop] = useState(window.pageYOffset);\n  const {\n    isLoading,\n    duration\n  } = useSelector(({\n    loading\n  }) => loading);\n  const {\n    isSideCartVisible,\n    isSidenavVisible\n  } = useContext(NavigationContext);\n  const {\n    pathname\n  } = useLocation();\n  useEffect(() => {\n    const onScroll = () => {\n      setScrollTop(window.pageYOffset);\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => window.removeEventListener('scroll', onScroll);\n  }, []);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Notifications, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ProgressBar, {\n    isActive: !isSideCartVisible && !isSidenavVisible && isLoading,\n    duration: duration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Topnav, {\n    isTransparent: pathname === '/' && scrollTop < 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Sidenav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SideCart, {\n    isBarActive: isLoading,\n    barDuration: duration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReturnToTop, {\n    isVisible: scrollTop >= 250 && !isSideCartVisible && !isSidenavVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/organisms/Navigation/Navigation.js"],"names":["React","useState","useEffect","useContext","useLocation","useSelector","styled","NavigationContext","Sidenav","Topnav","ReturnToTop","SideCart","ProgressBar","Notifications","Wrapper","div","Navigation","scrollTop","setScrollTop","window","pageYOffset","isLoading","duration","loading","isSideCartVisible","isSidenavVisible","pathname","onScroll","addEventListener","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,OAAOC,OAAP,MAAoB,yCAApB;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,QAAP,MAAqB,wCAArB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,aAAP,MAA0B,+CAA1B;AAEA,MAAMC,OAAO,GAAGR,MAAM,CAACS,GAAI;;CAA3B;;AAIA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAACkB,MAAM,CAACC,WAAR,CAA1C;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BjB,WAAW,CAAC,CAAC;AAAEkB,IAAAA;AAAF,GAAD,KAAiBA,OAAlB,CAA3C;AACA,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAA0CtB,UAAU,CAACI,iBAAD,CAA1D;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAetB,WAAW,EAAhC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,QAAQ,GAAG,MAAM;AACrBT,MAAAA,YAAY,CAACC,MAAM,CAACC,WAAR,CAAZ;AACD,KAFD;;AAGAD,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCD,QAAlC;AAEA,WAAO,MAAMR,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,QAArC,CAAb;AACD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAE,CAACH,iBAAD,IAAsB,CAACC,gBAAvB,IAA2CJ,SADvD;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAME,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAEI,QAAQ,KAAK,GAAb,IAAoBT,SAAS,GAAG,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAEI,SAAvB;AAAkC,IAAA,WAAW,EAAEC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAEL,SAAS,IAAI,GAAb,IAAoB,CAACO,iBAArB,IAA0C,CAACC,gBADxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAeD,CA9BD;;AAgCA,eAAeT,UAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { NavigationContext } from 'context/NavigationContext';\nimport Sidenav from 'components/organisms/Navigation/Sidenav';\nimport Topnav from 'components/organisms/Navigation/Topnav';\nimport ReturnToTop from 'components/organisms/Navigation/ReturnToTop';\nimport SideCart from 'components/organisms/SideCart/SideCart';\nimport ProgressBar from 'components/atoms/ProgressBar/ProgressBar';\nimport Notifications from 'components/organisms/Navigation/Notifications';\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst Navigation = () => {\n  const [scrollTop, setScrollTop] = useState(window.pageYOffset);\n  const { isLoading, duration } = useSelector(({ loading }) => loading);\n  const { isSideCartVisible, isSidenavVisible } = useContext(NavigationContext);\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    const onScroll = () => {\n      setScrollTop(window.pageYOffset);\n    };\n    window.addEventListener('scroll', onScroll);\n\n    return () => window.removeEventListener('scroll', onScroll);\n  }, []);\n\n  return (\n    <Wrapper>\n      <Notifications />\n      <ProgressBar\n        isActive={!isSideCartVisible && !isSidenavVisible && isLoading}\n        duration={duration}\n      />\n      <Topnav isTransparent={pathname === '/' && scrollTop < 10} />\n      <Sidenav />\n      <SideCart isBarActive={isLoading} barDuration={duration} />\n      <ReturnToTop\n        isVisible={scrollTop >= 250 && !isSideCartVisible && !isSidenavVisible}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}