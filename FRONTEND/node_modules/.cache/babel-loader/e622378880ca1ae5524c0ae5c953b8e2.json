{"ast":null,"code":"var _jsxFileName = \"/home/saidi/Desktop/TAYLOR+GOODS/FRONTEND/src/components/Route/ProtectedRoute.jsx\";\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({\n  isAdmin,\n  component: Component,\n  ...rest\n}) => {\n  const {\n    loading,\n    isAuthenticated,\n    user\n  } = useSelector(state => state.user);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, loading === false && /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (isAuthenticated === false) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 22\n          }\n        });\n      }\n\n      if (isAdmin === true && user.role !== \"admin\") {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 22\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 20\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ProtectedRoute;","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/FRONTEND/src/components/Route/ProtectedRoute.jsx"],"names":["React","Fragment","useSelector","Redirect","Route","ProtectedRoute","isAdmin","component","Component","rest","loading","isAuthenticated","user","state","props","role"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,SAAS,EAAEC,SAAtB;AAAiC,KAAGC;AAApC,CAAD,KAAgD;AACrE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA;AAA5B,MAAqCV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAtD;AAEA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,KAAK,KAAZ,iBACC,oBAAC,KAAD,oBACMD,IADN;AAEE,IAAA,MAAM,EAAGK,KAAD,IAAW;AACjB,UAAIH,eAAe,KAAK,KAAxB,EAA+B;AAC7B,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,UAAIL,OAAO,KAAK,IAAZ,IAAoBM,IAAI,CAACG,IAAL,KAAc,OAAtC,EAA+C;AAC7C,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,0BAAO,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,CADF;AAoBD,CAvBD;;AAyBA,eAAeT,cAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n  const { loading, isAuthenticated, user } = useSelector((state) => state.user);\n\n  return (\n    <Fragment>\n      {loading === false && (\n        <Route\n          {...rest}\n          render={(props) => {\n            if (isAuthenticated === false) {\n              return <Redirect to=\"/login\" />;\n            }\n\n            if (isAdmin === true && user.role !== \"admin\") {\n              return <Redirect to=\"/login\" />;\n            }\n\n            return <Component {...props} />;\n          }}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}