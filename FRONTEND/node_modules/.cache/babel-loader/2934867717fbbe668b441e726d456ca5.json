{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productReducer, productDetailsReducer, newReviewReducer } from './reducers/productReducer';\nimport { forgotPasswordReducer, profileReducer, userReducer } from './reducers/userReducer';\nimport { cartReducer } from './reducers/cartReducer';\nimport { allOrdersReducer, myOrdersReducer, newOrderReducer, orderDetailsReducer, orderReducer } from \"./reducers/orderReducer\";\nconst reducer = combineReducers({\n  products: productReducer,\n  productDetails: productDetailsReducer,\n  user: userReducer,\n  profile: profileReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer,\n  myOrders: myOrdersReducer,\n  orderDetails: orderDetailsReducer,\n  newReview: newReviewReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n    shippingInfo: localStorage.getItem(\"shippingInfo\") ? JSON.parse(localStorage.getItem(\"shippingInfo\")) : {}\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/FRONTEND/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducer","productDetailsReducer","newReviewReducer","forgotPasswordReducer","profileReducer","userReducer","cartReducer","allOrdersReducer","myOrdersReducer","newOrderReducer","orderDetailsReducer","orderReducer","reducer","products","productDetails","user","profile","forgotPassword","cart","newOrder","myOrders","orderDetails","newReview","initialState","cartItems","localStorage","getItem","JSON","parse","shippingInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,cAAT,EAAyBC,qBAAzB,EAA+CC,gBAA/C,QAAuE,2BAAvE;AACA,SAAQC,qBAAR,EAA+BC,cAA/B,EAA+CC,WAA/C,QAAiE,wBAAjE;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SACEC,gBADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,mBAJF,EAKEC,YALF,QAMO,yBANP;AASA,MAAMC,OAAO,GAAGhB,eAAe,CAAC;AAC5BiB,EAAAA,QAAQ,EAAEb,cADkB;AAE5Bc,EAAAA,cAAc,EAAGb,qBAFW;AAG5Bc,EAAAA,IAAI,EAAEV,WAHsB;AAI5BW,EAAAA,OAAO,EAAEZ,cAJmB;AAK5Ba,EAAAA,cAAc,EAAEd,qBALY;AAM5Be,EAAAA,IAAI,EAAEZ,WANsB;AAS5Ba,EAAAA,QAAQ,EAAEV,eATkB;AAU5BW,EAAAA,QAAQ,EAAEZ,eAVkB;AAW5Ba,EAAAA,YAAY,EAAEX,mBAXc;AAY5BY,EAAAA,SAAS,EAACpB;AAZkB,CAAD,CAA/B;AAgBA,IAAIqB,YAAY,GAAG;AACfL,EAAAA,IAAI,EAAE;AACJM,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP,EAHA;AAIJG,IAAAA,YAAY,EAAEJ,YAAY,CAACC,OAAb,CAAqB,cAArB,IACVC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADU,GAEV;AANA;AADS,CAAnB;AAWA,MAAMI,UAAU,GAAG,CAAChC,KAAD,CAAnB;AAEA,MAAMiC,KAAK,GAAGpC,WAAW,CACrBiB,OADqB,EAErBW,YAFqB,EAGrBxB,mBAAmB,CAACF,eAAe,CAAC,GAAGiC,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport { productReducer, productDetailsReducer,newReviewReducer } from './reducers/productReducer';\nimport {forgotPasswordReducer, profileReducer, userReducer} from './reducers/userReducer';\nimport {cartReducer} from './reducers/cartReducer';\nimport {\n  allOrdersReducer,\n  myOrdersReducer,\n  newOrderReducer,\n  orderDetailsReducer,\n  orderReducer,\n} from \"./reducers/orderReducer\";\n\n\nconst reducer = combineReducers({\n    products: productReducer,\n    productDetails : productDetailsReducer,\n    user: userReducer,\n    profile: profileReducer,\n    forgotPassword: forgotPasswordReducer,\n    cart: cartReducer,\n\n    \n    newOrder: newOrderReducer,\n    myOrders: myOrdersReducer,\n    orderDetails: orderDetailsReducer,\n    newReview:newReviewReducer\n    \n});\n\nlet initialState = {\n    cart: {\n      cartItems: localStorage.getItem(\"cartItems\")\n        ? JSON.parse(localStorage.getItem(\"cartItems\"))\n        : [],\n      shippingInfo: localStorage.getItem(\"shippingInfo\")\n        ? JSON.parse(localStorage.getItem(\"shippingInfo\"))\n        : {},\n    },\n  };\n  \nconst middleware = [thunk];\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}