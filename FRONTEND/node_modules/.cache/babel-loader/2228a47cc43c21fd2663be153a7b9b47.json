{"ast":null,"code":"import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { removeCartItem, updateCartItem } from 'actions';\n\nconst useCart = item => {\n  const [isErrorVisible, setErrorVisibility] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    id,\n    size,\n    quantity,\n    limit\n  } = item;\n\n  const showErrorMessage = () => {\n    setErrorVisibility(true);\n    setTimeout(() => setErrorVisibility(false), 1000);\n  };\n\n  const handleAdd = () => {\n    if (quantity < limit) dispatch(updateCartItem({ ...item,\n      quantity: quantity + 1\n    }));else showErrorMessage();\n  };\n\n  const removeItem = () => {\n    dispatch(removeCartItem(id, 'cart', size));\n  };\n\n  const handleSubtract = () => {\n    if (quantity === 1) removeItem();else {\n      setErrorVisibility(false);\n      dispatch(updateCartItem({ ...item,\n        quantity: quantity - 1\n      }));\n    }\n  };\n\n  return [isErrorVisible, {\n    removeItem,\n    showErrorMessage,\n    handleAdd,\n    handleSubtract\n  }];\n};\n\nexport default useCart;","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/hooks/useCart.js"],"names":["useState","useDispatch","removeCartItem","updateCartItem","useCart","item","isErrorVisible","setErrorVisibility","dispatch","id","size","quantity","limit","showErrorMessage","setTimeout","handleAdd","removeItem","handleSubtract"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,SAA/C;;AAEA,MAAMC,OAAO,GAAGC,IAAI,IAAI;AACtB,QAAM,CAACC,cAAD,EAAiBC,kBAAjB,IAAuCP,QAAQ,CAAC,KAAD,CAArD;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAM;AAAEQ,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAgCP,IAAtC;;AAEA,QAAMQ,gBAAgB,GAAG,MAAM;AAC7BN,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAO,IAAAA,UAAU,CAAC,MAAMP,kBAAkB,CAAC,KAAD,CAAzB,EAAkC,IAAlC,CAAV;AACD,GAHD;;AAKA,QAAMQ,SAAS,GAAG,MAAM;AACtB,QAAIJ,QAAQ,GAAGC,KAAf,EACEJ,QAAQ,CAACL,cAAc,CAAC,EAAE,GAAGE,IAAL;AAAWM,MAAAA,QAAQ,EAAEA,QAAQ,GAAG;AAAhC,KAAD,CAAf,CAAR,CADF,KAEKE,gBAAgB;AACtB,GAJD;;AAMA,QAAMG,UAAU,GAAG,MAAM;AACvBR,IAAAA,QAAQ,CAACN,cAAc,CAACO,EAAD,EAAK,MAAL,EAAaC,IAAb,CAAf,CAAR;AACD,GAFD;;AAMA,QAAMO,cAAc,GAAG,MAAM;AAC3B,QAAIN,QAAQ,KAAK,CAAjB,EAAoBK,UAAU,GAA9B,KACK;AACHT,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAC,MAAAA,QAAQ,CAACL,cAAc,CAAC,EAAE,GAAGE,IAAL;AAAWM,QAAAA,QAAQ,EAAEA,QAAQ,GAAG;AAAhC,OAAD,CAAf,CAAR;AACD;AACF,GAND;;AAQA,SAAO,CACLL,cADK,EAEL;AAAEU,IAAAA,UAAF;AAAcH,IAAAA,gBAAd;AAAgCE,IAAAA,SAAhC;AAA2CE,IAAAA;AAA3C,GAFK,CAAP;AAID,CAnCD;;AAqCA,eAAeb,OAAf","sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { removeCartItem, updateCartItem } from 'actions';\n\nconst useCart = item => {\n  const [isErrorVisible, setErrorVisibility] = useState(false);\n  const dispatch = useDispatch();\n\n  const { id, size, quantity, limit } = item;\n\n  const showErrorMessage = () => {\n    setErrorVisibility(true);\n    setTimeout(() => setErrorVisibility(false), 1000);\n  };\n\n  const handleAdd = () => {\n    if (quantity < limit)\n      dispatch(updateCartItem({ ...item, quantity: quantity + 1 }));\n    else showErrorMessage();\n  };\n\n  const removeItem = () => {\n    dispatch(removeCartItem(id, 'cart', size));\n  };\n \n  \n\n  const handleSubtract = () => {\n    if (quantity === 1) removeItem();\n    else {\n      setErrorVisibility(false);\n      dispatch(updateCartItem({ ...item, quantity: quantity - 1 }));\n    }\n  };\n\n  return [\n    isErrorVisible,\n    { removeItem, showErrorMessage, handleAdd, handleSubtract },\n  ];\n};\n\nexport default useCart;\n"]},"metadata":{},"sourceType":"module"}