{"ast":null,"code":"import axios from 'axios';\nimport { ALL_PRODUCT_FAIL, ALL_PRODUCT_REQUEST, ALL_PRODUCT_SUCCESS, CLEAR_ERRORS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, ADMIN_PRODUCT_REQUEST, ADMIN_PRODUCT_SUCCESS, ADMIN_PRODUCT_FAIL, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_SUCCESS, UPDATE_PRODUCT_FAIL, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAIL, NEW_PRODUCT_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_FAIL } from '../constants/productConstants';\nexport const getProduct = (keyword = \"\", currentPage = 1, category, rating = 0) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&rating[gte]=${rating}`;\n\n    if (category) {\n      link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&category=${category}`;\n    }\n\n    const {\n      data\n    } = await axios.get(link);\n    console.log(data);\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get All Products For Admin\n\nexport const getAdminProduct = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/admin/products\");\n    dispatch({\n      type: ADMIN_PRODUCT_SUCCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Create Product\n\nexport const createProduct = productData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/admin/product/new`, productData, config);\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Update Product\n\nexport const updateProduct = (id, productData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/product/${id}`, productData, config);\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Delete Product\n\nexport const deleteProduct = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/product/${id}`);\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get Products Details\n\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    console.log(data);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // NEW REVIEW\n\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //clearing errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/FRONTEND/src/actions/productAction.js"],"names":["axios","ALL_PRODUCT_FAIL","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","CLEAR_ERRORS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_SUCCESS","ADMIN_PRODUCT_REQUEST","ADMIN_PRODUCT_SUCCESS","ADMIN_PRODUCT_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","getProduct","keyword","currentPage","category","rating","dispatch","type","link","data","get","console","log","payload","error","response","message","getAdminProduct","products","createProduct","productData","config","headers","post","updateProduct","id","put","success","deleteProduct","delete","getProductDetails","product","newReview","reviewData","clearErrors"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {\n    ALL_PRODUCT_FAIL,\n    ALL_PRODUCT_REQUEST,\n    ALL_PRODUCT_SUCCESS,\n    CLEAR_ERRORS,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_SUCCESS,\n    ADMIN_PRODUCT_REQUEST,\n    ADMIN_PRODUCT_SUCCESS,\n    ADMIN_PRODUCT_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n} from '../constants/productConstants';\n\nexport const getProduct = \n(keyword=\"\", currentPage = 1,category,rating=0) => \nasync (dispatch) => {\n    try {\n        dispatch({type: ALL_PRODUCT_REQUEST});\n        \n        \n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&rating[gte]=${rating}`\n\n        if(category){\n          link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&category=${category}`\n        }\n        \n\n\n        const {data} = await axios.get(link);\n        console.log(data)\n\n        dispatch({\n            type:ALL_PRODUCT_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCT_FAIL,\n            payload: error.response.data.message,\n        })\n    }\n};\n\n// Get All Products For Admin\nexport const getAdminProduct = () => async (dispatch) => {\n  try {\n    dispatch({ type: ADMIN_PRODUCT_REQUEST });\n\n    const { data } = await axios.get(\"/api/v1/admin/products\");\n\n    dispatch({\n      type: ADMIN_PRODUCT_SUCCESS,\n      payload: data.products,\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n\n// Create Product\nexport const createProduct = (productData) => async (dispatch) => {\n  try {\n    dispatch({ type: NEW_PRODUCT_REQUEST });\n\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n\n    const { data } = await axios.post(\n      `/api/v1/admin/product/new`,\n      productData,\n      config\n    );\n\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update Product\nexport const updateProduct = (id, productData) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\n\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n\n    const { data } = await axios.put(\n      `/api/v1/admin/product/${id}`,\n      productData,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete Product\nexport const deleteProduct = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_PRODUCT_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\n\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n// Get Products Details\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_DETAILS_REQUEST });\n  \n      const { data } = await axios.get(`/api/v1/product/${id}`);\n      console.log(data);\n  \n      dispatch({\n        type: PRODUCT_DETAILS_SUCCESS,\n        payload: data.product,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_DETAILS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n \n  // NEW REVIEW\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n      dispatch({ type: NEW_REVIEW_REQUEST });\n  \n      const config = {\n        headers: { \"Content-Type\": \"application/json\" },\n      };\n  \n      const { data } = await axios.put(`/api/v1/review`, reviewData, config);\n  \n      dispatch({\n        type: NEW_REVIEW_SUCCESS,\n        payload: data.success,\n      });\n    } catch (error) {\n      dispatch({\n        type: NEW_REVIEW_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n\n//clearing errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n}"]},"metadata":{},"sourceType":"module"}