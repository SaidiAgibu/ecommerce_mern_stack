{"ast":null,"code":"var _jsxFileName = \"/home/saidi/Desktop/TAYLOR+GOODS/FRONTEND/src/components/Product/AllProducts.jsx\";\nimport React, { Fragment, useEffect } from 'react';\nimport './AllProducts.css';\nimport Products from '../Product/Product';\nimport Loader from '../Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProduct } from '../../actions/productAction';\n\nconst AllProducts = ({\n  match\n}) => {\n  const dispatch = useDispatch();\n  const {\n    products,\n    loading,\n    error,\n    productsCount\n  } = useSelector(state => state.products);\n  const keyword = match.params.keyword;\n  useEffect(() => {\n    dispatch(getProduct(keyword));\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"productsHeading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, products && products.map(product => /*#__PURE__*/React.createElement(Products, {\n    key: product._id,\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default AllProducts;","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/FRONTEND/src/components/Product/AllProducts.jsx"],"names":["React","Fragment","useEffect","Products","Loader","useDispatch","useSelector","getProduct","AllProducts","match","dispatch","products","loading","error","productsCount","state","keyword","params","map","product","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC7B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM;AAACM,IAAAA,QAAD;AAAUC,IAAAA,OAAV;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA;AAAzB,MAA0CR,WAAW,CACtDS,KAAD,IAAWA,KAAK,CAACJ,QADsC,CAA3D;AAIA,QAAMK,OAAO,GAAGP,KAAK,CAACQ,MAAN,CAAaD,OAA7B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACH,UAAU,CAACS,OAAD,CAAX,CAAR;AACH,GAFQ,EAEN,CAACN,QAAD,CAFM,CAAT;AAKF,sBACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OAAO,gBACR,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAGR,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC,UAAhC,CADJ,eAGI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QAAQ,IACTA,QAAQ,CAACO,GAAT,CAAcC,OAAD,iBACT,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,OAAO,CAACC,GAAvB;AAA4B,IAAA,OAAO,EAAED,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAHJ,CAJF,CADA;AAkBD,CAhCD;;AAkCA,eAAeX,WAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport './AllProducts.css';\nimport Products from '../Product/Product';\nimport Loader from '../Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProduct } from '../../actions/productAction';\n\n\nconst AllProducts = ({match}) => {\n    const dispatch = useDispatch();\n\n    const {products,loading,error, productsCount} = useSelector(\n        (state) => state.products\n    );\n\n    const keyword = match.params.keyword;\n\n    useEffect(() => {\n        dispatch(getProduct(keyword));\n    }, [dispatch]);\n\n\n  return (\n  <Fragment>\n    {loading ? (\n    <Loader /> \n    ): (\n    <Fragment>\n        <h2 className='productsHeading'>Products</h2>\n\n        <div className='products'>\n            {products &&\n            products.map((product) => (\n                <Products key={product._id} product={product} />\n            ))}\n        </div>\n        </Fragment>\n        )}\n  </Fragment>\n  );\n};\n\nexport default AllProducts;"]},"metadata":{},"sourceType":"module"}