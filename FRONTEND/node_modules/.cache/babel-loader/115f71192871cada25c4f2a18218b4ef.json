{"ast":null,"code":"var _jsxFileName = \"/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/molecules/Categories/Categories.js\";\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setSearchValues } from 'actions';\nimport styled from 'styled-components'; //import categoryImg1 from '../../../assets/images/shoe1-2.jpg';\n//import categoryImg2 from '../../../assets/images/hoyo.jpeg';\n//import categoryImg3 from 'assets/images/category3.jpg';\n\nimport Button from 'components/atoms/Button/Button';\nimport { useState } from 'react';\nconst Wrapper = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  flex-direction: column;\n  ${({\n  theme\n}) => theme.mq.sm} {\n    flex-direction: row;\n  }\n  ${({\n  theme\n}) => theme.mq.xl} {\n    flex-wrap: nowrap;\n    justify-content: center;\n  }\n`;\nconst Category = styled.div`\n  flex-basis: 100%;\n  position: relative;\n  transition: 0.2s;\n  margin-top: 12px;\n  overflow: hidden;\n  ${({\n  theme\n}) => theme.mq.sm} {\n    margin: 10px;\n    flex-basis: calc(50% - 20px);\n    &:nth-child(1) {\n      flex-basis: 100%;\n      max-height: 200px;\n      ${({\n  theme\n}) => theme.mq.md} {\n        max-height: 320px;\n      }\n    }\n  }\n  ${({\n  theme\n}) => theme.mq.xl} {\n    flex-basis: 31.5% !important;\n    max-height: 100% !important;\n  }\n`;\nconst CategoryImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  transition: transform 0.7s;\n`;\nconst StyledButton = styled(Button)`\n  position: absolute;\n  bottom: 5%;\n  left: 50%;\n  transform: translate(-50%, -5%);\n  z-index: 2;\n  box-shadow: 1px 1px 0 0 rgba(0, 0, 0, 0.1);\n  transition: 0.35s;\n  opacity: 0.85;\n  font-weight: ${({\n  theme\n}) => theme.medium};\n  border-radius: 2px;\n  text-transform: none;\n  padding: 18px 40px !important;\n`;\nconst StyledLink = styled(Link)`\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(rgba(53, 129, 200, 0.2), rgba(2, 15, 32, 0.2))\n      no-repeat center;\n    z-index: 1;\n  }\n  &:hover > ${CategoryImage} {\n    transform: scale3d(1.1, 1.1, 1);\n    cursor: pointer;\n  }\n  &:hover > ${StyledButton} {\n    opacity: 1;\n    background-color: ${({\n  theme\n}) => theme.blue};\n    color: ${({\n  theme\n}) => theme.white};\n  }\n`;\n\nconst Categories = () => {\n  const [categories, setCategories] = useState([]); //to store the categories from backend\n\n  const [images, setImages] = useState([]); //to store the images from backend\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('https://fakestoreapi.com/products/categories'); //fetch categories and images from backend\n\n        console.log(data);\n        setCategories(data.categories);\n        setImages(data.images);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, categories.map((category, index) => /*#__PURE__*/React.createElement(Category, {\n    key: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    onClick: () => dispatch(setSearchValues('categories', [category])),\n    to: \"/catalog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CategoryImage, {\n    src: images[index],\n    alt: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StyledButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, category)))));\n};\n\nexport default Categories;\n/* return (\n   <Wrapper>\n     <Category>\n       <StyledLink\n         onClick={() => dispatch(setSearchValues('categories', ['Shoes']))}\n         to=\"/catalog\"\n       >\n         <CategoryImage src={categoryImg1} alt=\"shoes\" />\n         <StyledButton>Shoes</StyledButton>\n       </StyledLink>\n     </Category>\n     <Category>\n       <StyledLink\n         onClick={() => dispatch(setSearchValues('categories', ['Hoodies']))}\n         to=\"/catalog\"\n       >\n         <CategoryImage src={categoryImg2} alt=\"hoodies\" />\n         <StyledButton>Suppliments</StyledButton>\n       </StyledLink>\n     </Category>\n     <Category>\n       <StyledLink\n         onClick={() => dispatch(setSearchValues('categories', ['Jackets']))}\n         to=\"/catalog\"\n       >\n         <CategoryImage src={categoryImg3} alt=\"jackets\" />\n         <StyledButton>Jackets</StyledButton>\n       </StyledLink>\n     </Category>\n   </Wrapper>\n );\n};\nexport default Categories;*/","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/molecules/Categories/Categories.js"],"names":["React","useEffect","axios","Link","useDispatch","setSearchValues","styled","Button","useState","Wrapper","section","theme","mq","sm","xl","Category","div","md","CategoryImage","img","StyledButton","medium","StyledLink","blue","white","Categories","categories","setCategories","images","setImages","dispatch","fetchData","data","get","console","log","error","map","category","index"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setSearchValues } from 'actions';\nimport styled from 'styled-components';\n//import categoryImg1 from '../../../assets/images/shoe1-2.jpg';\n//import categoryImg2 from '../../../assets/images/hoyo.jpeg';\n//import categoryImg3 from 'assets/images/category3.jpg';\nimport Button from 'components/atoms/Button/Button';\nimport { useState } from 'react';\n\nconst Wrapper = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  flex-direction: column;\n  ${({ theme }) => theme.mq.sm} {\n    flex-direction: row;\n  }\n  ${({ theme }) => theme.mq.xl} {\n    flex-wrap: nowrap;\n    justify-content: center;\n  }\n`;\n\nconst Category = styled.div`\n  flex-basis: 100%;\n  position: relative;\n  transition: 0.2s;\n  margin-top: 12px;\n  overflow: hidden;\n  ${({ theme }) => theme.mq.sm} {\n    margin: 10px;\n    flex-basis: calc(50% - 20px);\n    &:nth-child(1) {\n      flex-basis: 100%;\n      max-height: 200px;\n      ${({ theme }) => theme.mq.md} {\n        max-height: 320px;\n      }\n    }\n  }\n  ${({ theme }) => theme.mq.xl} {\n    flex-basis: 31.5% !important;\n    max-height: 100% !important;\n  }\n`;\n\nconst CategoryImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  transition: transform 0.7s;\n`;\n\nconst StyledButton = styled(Button)`\n  position: absolute;\n  bottom: 5%;\n  left: 50%;\n  transform: translate(-50%, -5%);\n  z-index: 2;\n  box-shadow: 1px 1px 0 0 rgba(0, 0, 0, 0.1);\n  transition: 0.35s;\n  opacity: 0.85;\n  font-weight: ${({ theme }) => theme.medium};\n  border-radius: 2px;\n  text-transform: none;\n  padding: 18px 40px !important;\n`;\n\nconst StyledLink = styled(Link)`\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(rgba(53, 129, 200, 0.2), rgba(2, 15, 32, 0.2))\n      no-repeat center;\n    z-index: 1;\n  }\n  &:hover > ${CategoryImage} {\n    transform: scale3d(1.1, 1.1, 1);\n    cursor: pointer;\n  }\n  &:hover > ${StyledButton} {\n    opacity: 1;\n    background-color: ${({ theme }) => theme.blue};\n    color: ${({ theme }) => theme.white};\n  }\n`;\n\nconst Categories = () => {\n\n  const [categories, setCategories] = useState([]); //to store the categories from backend\n  const [images, setImages] = useState([]); //to store the images from backend\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get('https://fakestoreapi.com/products/categories'); //fetch categories and images from backend\n        console.log(data)\n        setCategories(data.categories);\n        setImages(data.images);\n      } catch (error) {\n        console.log(error);\n      }\n      \n    };\n    fetchData();\n  }, []);\n\n  return (\n    <Wrapper>\n      {categories.map((category, index) => (\n        <Category key={category}>\n          <StyledLink\n            onClick={() => dispatch(setSearchValues('categories', [category]))}\n            to=\"/catalog\"\n          >\n            <CategoryImage src={images[index]} alt={category} />\n            <StyledButton>{category}</StyledButton>\n          </StyledLink>\n        </Category>\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default Categories;\n  \n\n\n /* return (\n    <Wrapper>\n      <Category>\n        <StyledLink\n          onClick={() => dispatch(setSearchValues('categories', ['Shoes']))}\n          to=\"/catalog\"\n        >\n          <CategoryImage src={categoryImg1} alt=\"shoes\" />\n          <StyledButton>Shoes</StyledButton>\n        </StyledLink>\n      </Category>\n      <Category>\n        <StyledLink\n          onClick={() => dispatch(setSearchValues('categories', ['Hoodies']))}\n          to=\"/catalog\"\n        >\n          <CategoryImage src={categoryImg2} alt=\"hoodies\" />\n          <StyledButton>Suppliments</StyledButton>\n        </StyledLink>\n      </Category>\n      <Category>\n        <StyledLink\n          onClick={() => dispatch(setSearchValues('categories', ['Jackets']))}\n          to=\"/catalog\"\n        >\n          <CategoryImage src={categoryImg3} alt=\"jackets\" />\n          <StyledButton>Jackets</StyledButton>\n        </StyledLink>\n      </Category>\n    </Wrapper>\n  );\n};\n\nexport default Categories;*/\n"]},"metadata":{},"sourceType":"module"}