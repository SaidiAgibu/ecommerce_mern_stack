{"ast":null,"code":"import axios from 'axios';\nimport { ALL_PRODUCT_FAIL, ALL_PRODUCT_REQUEST, ALL_PRODUCT_SUCCESS, CLEAR_ERRORS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL } from '../constants/productConstants';\nexport const getProduct = (keyword = \"\", currentPage = 1, category) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}`;\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get Products Details\n\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    console.log(data);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // NEW REVIEW\n\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //clearing errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/FRONTEND/src/actions/productAction.js"],"names":["axios","ALL_PRODUCT_FAIL","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","CLEAR_ERRORS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_SUCCESS","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","getProduct","keyword","currentPage","category","dispatch","type","link","data","get","payload","error","response","message","getProductDetails","id","console","log","product","newReview","reviewData","config","headers","put","success","clearErrors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,gBADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,YAJJ,EAKIC,uBALJ,EAMIC,oBANJ,EAOIC,uBAPJ,EAQIC,kBARJ,EASIC,kBATJ,EAUIC,eAVJ,QAWO,+BAXP;AAaA,OAAO,MAAMC,UAAU,GACvB,CAACC,OAAO,GAAC,EAAT,EAAaC,WAAW,GAAG,CAA3B,EAA6BC,QAA7B,KACA,MAAOC,QAAP,IAAoB;AAChB,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEd;AAAP,KAAD,CAAR;AAGA,QAAIe,IAAI,GAAI,4BAA2BL,OAAQ,SAAQC,WAAY,EAAnE;AAGA,UAAM;AAACK,MAAAA;AAAD,QAAS,MAAMlB,KAAK,CAACmB,GAAN,CAAUF,IAAV,CAArB;AAEAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACb,mBADA;AAELiB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GAbD,CAaE,OAAOG,KAAP,EAAc;AACZN,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEf,gBADD;AAELmB,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;AAFxB,KAAD,CAAR;AAIH;AACJ,CAtBM,C,CAwBP;;AACA,OAAO,MAAMC,iBAAiB,GAAIC,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AACzD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEa,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAACmB,GAAN,CAAW,mBAAkBM,EAAG,EAAhC,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AAEAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,uBADC;AAEPa,MAAAA,OAAO,EAAEF,IAAI,CAACU;AAFP,KAAD,CAAR;AAID,GAVD,CAUE,OAAOP,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,oBADC;AAEPc,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;AAFtB,KAAD,CAAR;AAID;AACF,CAjBI,C,CAmBL;;AACF,OAAO,MAAMM,SAAS,GAAIC,UAAD,IAAgB,MAAOf,QAAP,IAAoB;AACzD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AAEA,UAAMuB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AADI,KAAf;AAIA,UAAM;AAAEd,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAACiC,GAAN,CAAW,gBAAX,EAA4BH,UAA5B,EAAwCC,MAAxC,CAAvB;AAEAhB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,kBADC;AAEPW,MAAAA,OAAO,EAAEF,IAAI,CAACgB;AAFP,KAAD,CAAR;AAID,GAbD,CAaE,OAAOb,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,eADC;AAEPU,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;AAFtB,KAAD,CAAR;AAID;AACF,CApBI,C,CAsBP;;AACA,OAAO,MAAMY,WAAW,GAAG,MAAM,MAAOpB,QAAP,IAAoB;AACjDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AACH,CAFM","sourcesContent":["import axios from 'axios';\n\nimport {\n    ALL_PRODUCT_FAIL,\n    ALL_PRODUCT_REQUEST,\n    ALL_PRODUCT_SUCCESS,\n    CLEAR_ERRORS,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_SUCCESS,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n} from '../constants/productConstants';\n\nexport const getProduct = \n(keyword=\"\", currentPage = 1,category) => \nasync (dispatch) => {\n    try {\n        dispatch({type: ALL_PRODUCT_REQUEST});\n        \n        \n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}`\n\n        \n        const {data} = await axios.get(link);\n\n        dispatch({\n            type:ALL_PRODUCT_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCT_FAIL,\n            payload: error.response.data.message,\n        })\n    }\n};\n\n// Get Products Details\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_DETAILS_REQUEST });\n  \n      const { data } = await axios.get(`/api/v1/product/${id}`);\n      console.log(data);\n  \n      dispatch({\n        type: PRODUCT_DETAILS_SUCCESS,\n        payload: data.product,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_DETAILS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n \n  // NEW REVIEW\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n      dispatch({ type: NEW_REVIEW_REQUEST });\n  \n      const config = {\n        headers: { \"Content-Type\": \"application/json\" },\n      };\n  \n      const { data } = await axios.put(`/api/v1/review`, reviewData, config);\n  \n      dispatch({\n        type: NEW_REVIEW_SUCCESS,\n        payload: data.success,\n      });\n    } catch (error) {\n      dispatch({\n        type: NEW_REVIEW_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n\n//clearing errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n}"]},"metadata":{},"sourceType":"module"}