{"ast":null,"code":"var _jsxFileName = \"/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/organisms/Checkout/Form/Form.js\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport Button from 'components/atoms/Button/Button';\nimport RadioInputs from 'components/organisms/Checkout/Form/RadioInputs';\nimport FormInput from 'components/organisms/Checkout/Form/FormInput'; // eslint-disable-next-line import/no-extraneous-dependencies\n\nimport PropTypes from 'prop-types';\nimport { updateStore } from 'actions';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nconst HeadingWrapper = styled.div`\n  margin: 0 0 60px 0;\n`;\nconst Heading = styled.h3`\n  margin: 0 0 15px 10px;\n  color: ${({\n  theme\n}) => theme.dark};\n  font-family: ${({\n  theme\n}) => theme.fonts.subFont2};\n  font-weight: ${({\n  theme\n}) => theme.medium};\n  font-size: ${({\n  theme\n}) => theme.fontSize.sm};\n`;\nconst StyledButton = styled(Button)`\n  margin: 30px 0;\n  height: 56px;\n  border-radius: 4px;\n  ${({\n  disabled\n}) => disabled && css`\n      content: '';\n      background-color: ${({\n  theme\n}) => theme.blue};\n      border-color: ${({\n  theme\n}) => theme.blue};\n      cursor: default;\n    `}\n`;\nconst InputWrapper = styled.div`\n  display: flex;\n  & div:first-child {\n    margin-right: 10px;\n  }\n  ${({\n  theme\n}) => theme.mq.sm} {\n    & div:first-child {\n      flex-basis: 55%;\n    }\n  }\n`;\nconst CheckoutSchema = Yup.object().shape({\n  name: Yup.string().required('Your name is required!'),\n  email: Yup.string().email('Email address is invalid!').required('Email address is required!'),\n  address: Yup.string().required('Address is required!'),\n  postalCode: Yup.string().required('Postal Code is required!'),\n  city: Yup.string().required('City is required!')\n});\n\nconst CheckoutForm = ({\n  cartItems\n}) => {\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      address: '',\n      postalCode: '',\n      city: '',\n      payment: 'creditCard'\n    },\n    validationSchema: CheckoutSchema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      cartItems.map(({\n        id,\n        size,\n        quantity\n      }) => dispatch(updateStore(id, size, quantity)));\n      setTimeout(() => {\n        setSubmitting(false);\n      }, 3500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    setFieldValue,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeadingWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Billing details\")), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"name\",\n    label: \"First & last name\",\n    onChangeFn: handleChange,\n    onBlurFn: handleBlur,\n    value: values.name,\n    touched: touched.name,\n    errors: errors.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"email\",\n    label: \"Email address\",\n    onChangeFn: handleChange,\n    onBlurFn: handleBlur,\n    value: values.email,\n    touched: touched.email,\n    errors: errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"address\",\n    label: \"Address\",\n    onChangeFn: handleChange,\n    onBlurFn: handleBlur,\n    value: values.address,\n    touched: touched.address,\n    errors: errors.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    id: \"postalCode\",\n    label: \"Postal Code\",\n    onChangeFn: handleChange,\n    onBlurFn: handleBlur,\n    value: values.postalCode,\n    touched: touched.postalCode,\n    errors: errors.postalCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"city\",\n    label: \"City\",\n    onChangeFn: handleChange,\n    onBlurFn: handleBlur,\n    value: values.city,\n    touched: touched.city,\n    errors: errors.city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Payment method\"), /*#__PURE__*/React.createElement(RadioInputs, {\n    setField: setFieldValue,\n    name: \"payment\",\n    value: values.payment,\n    options: [{\n      id: 'paynow',\n      label: 'Paypal'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledButton, {\n    submit: \"true\",\n    disabled: isSubmitting,\n    secondary: \"true\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, !isSubmitting && 'Complete your order')));\n};\n\nCheckoutForm.propTypes = {\n  cartItems: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default CheckoutForm;","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/organisms/Checkout/Form/Form.js"],"names":["React","styled","css","useDispatch","Button","RadioInputs","FormInput","PropTypes","updateStore","Formik","Form","Yup","HeadingWrapper","div","Heading","h3","theme","dark","fonts","subFont2","medium","fontSize","sm","StyledButton","disabled","blue","InputWrapper","mq","CheckoutSchema","object","shape","name","string","required","email","address","postalCode","city","CheckoutForm","cartItems","dispatch","payment","values","setSubmitting","map","id","size","quantity","setTimeout","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","label","propTypes","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport Button from 'components/atoms/Button/Button';\nimport RadioInputs from 'components/organisms/Checkout/Form/RadioInputs';\nimport FormInput from 'components/organisms/Checkout/Form/FormInput';\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport PropTypes from 'prop-types';\nimport { updateStore } from 'actions';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nconst HeadingWrapper = styled.div`\n  margin: 0 0 60px 0;\n`;\n\nconst Heading = styled.h3`\n  margin: 0 0 15px 10px;\n  color: ${({ theme }) => theme.dark};\n  font-family: ${({ theme }) => theme.fonts.subFont2};\n  font-weight: ${({ theme }) => theme.medium};\n  font-size: ${({ theme }) => theme.fontSize.sm};\n`;\n\nconst StyledButton = styled(Button)`\n  margin: 30px 0;\n  height: 56px;\n  border-radius: 4px;\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      content: '';\n      background-color: ${({ theme }) => theme.blue};\n      border-color: ${({ theme }) => theme.blue};\n      cursor: default;\n    `}\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  & div:first-child {\n    margin-right: 10px;\n  }\n  ${({ theme }) => theme.mq.sm} {\n    & div:first-child {\n      flex-basis: 55%;\n    }\n  }\n`;\n\nconst CheckoutSchema = Yup.object().shape({\n  name: Yup.string().required('Your name is required!'),\n  email: Yup.string()\n    .email('Email address is invalid!')\n    .required('Email address is required!'),\n  address: Yup.string().required('Address is required!'),\n  postalCode: Yup.string().required('Postal Code is required!'),\n  city: Yup.string().required('City is required!'),\n});\n\nconst CheckoutForm = ({ cartItems }) => {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        address: '',\n        postalCode: '',\n        city: '',\n        payment: 'creditCard',\n      }}\n      validationSchema={CheckoutSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        cartItems.map(({ id, size, quantity }) =>\n          dispatch(updateStore(id, size, quantity)),\n        );\n        setTimeout(() => {\n          setSubmitting(false);\n        }, 3500);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setFieldValue,\n        isSubmitting,\n      }) => (\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\n          <HeadingWrapper>\n            <Heading>Billing details</Heading>\n          </HeadingWrapper>\n          <FormInput\n            id=\"name\"\n            label=\"First & last name\"\n            onChangeFn={handleChange}\n            onBlurFn={handleBlur}\n            value={values.name}\n            touched={touched.name}\n            errors={errors.name}\n          />\n          <FormInput\n            id=\"email\"\n            label=\"Email address\"\n            onChangeFn={handleChange}\n            onBlurFn={handleBlur}\n            value={values.email}\n            touched={touched.email}\n            errors={errors.email}\n          />\n          <FormInput\n            id=\"address\"\n            label=\"Address\"\n            onChangeFn={handleChange}\n            onBlurFn={handleBlur}\n            value={values.address}\n            touched={touched.address}\n            errors={errors.address}\n          />\n          <InputWrapper>\n            <FormInput\n              id=\"postalCode\"\n              label=\"Postal Code\"\n              onChangeFn={handleChange}\n              onBlurFn={handleBlur}\n              value={values.postalCode}\n              touched={touched.postalCode}\n              errors={errors.postalCode}\n            />\n            <FormInput\n              id=\"city\"\n              label=\"City\"\n              onChangeFn={handleChange}\n              onBlurFn={handleBlur}\n              value={values.city}\n              touched={touched.city}\n              errors={errors.city}\n            />\n          </InputWrapper>\n          <Heading>Payment method</Heading>\n          <RadioInputs\n            setField={setFieldValue}\n            name=\"payment\"\n            value={values.payment}\n            options={[\n\n              { id: 'paynow', label: 'Paypal' },\n              \n            ]}\n          />\n          <StyledButton\n            submit=\"true\"\n            disabled={isSubmitting}\n            secondary=\"true\"\n            type=\"submit\"\n          >\n            {!isSubmitting && 'Complete your order'}\n          </StyledButton>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nCheckoutForm.propTypes = {\n  cartItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CheckoutForm;\n"]},"metadata":{},"sourceType":"module"}