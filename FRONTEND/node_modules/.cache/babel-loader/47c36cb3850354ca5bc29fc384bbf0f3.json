{"ast":null,"code":"var _jsxFileName = \"/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/templates/GridTemplate.js\";\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport SkeletonCard from 'components/molecules/ProductCard/SkeletonCard';\nimport ProductCard from 'components/molecules/ProductCard/ProductCard';\nimport { motion } from 'framer-motion';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport useSkeleton from 'hooks/useSkeleton';\nconst GridWrapper = styled.section`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 15px;\n  ${({\n  theme\n}) => theme.mq.xs} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  ${({\n  theme\n}) => theme.mq.md} {\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 25px;\n  }\n\n  ${({\n  isWide\n}) => isWide && css`\n      ${({\n  theme\n}) => theme.mq.xl} {\n        grid-template-columns: repeat(4, 1fr);\n      }\n    `}\n  ${({\n  explicit\n}) => explicit && css`\n      ${({\n  theme\n}) => theme.mq.md} {\n        & div:nth-child(4) {\n          display: none;\n        }\n      }\n      ${({\n  theme\n}) => theme.mq.xl} {\n        & div:nth-child(4) {\n          display: block;\n        }\n      }\n    `}\n`;\n\nconst GridTemplate = ({\n  products,\n  isWide,\n  explicit\n}) => {\n  const isSkeletonLoading = useSkeleton();\n  const isLoading = useSelector(({\n    isDataLoading\n  }) => isDataLoading);\n  return /*#__PURE__*/React.createElement(GridWrapper, {\n    explicit: explicit,\n    isWide: isWide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, isLoading || isSkeletonLoading ? Array(products.length || 6).fill().map((_, id) => /*#__PURE__*/React.createElement(SkeletonCard, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  })) : products.map(({\n    id,\n    name,\n    price,\n    image\n  }) => /*#__PURE__*/React.createElement(motion.div, {\n    key: id,\n    positionTransition: !explicit,\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    transition: {\n      duration: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProductCard, {\n    id: id,\n    name: name,\n    price: price,\n    image: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }))));\n};\n\nGridTemplate.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isWide: PropTypes.bool,\n  explicit: PropTypes.bool\n};\nGridTemplate.defaultProps = {\n  isWide: false,\n  explicit: false\n};\nexport default GridTemplate;","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/templates/GridTemplate.js"],"names":["React","styled","css","SkeletonCard","ProductCard","motion","useSelector","PropTypes","useSkeleton","GridWrapper","section","theme","mq","xs","md","isWide","xl","explicit","GridTemplate","products","isSkeletonLoading","isLoading","isDataLoading","Array","length","fill","map","_","id","name","price","image","opacity","duration","propTypes","arrayOf","object","isRequired","bool","defaultProps"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,MAAMC,WAAW,GAAGR,MAAM,CAACS,OAAQ;;;;IAI/B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,EAAN,CAASC,EAAG;;;IAG3B,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,EAAN,CAASE,EAAG;;;;;IAK3B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,MAAM,IACNb,GAAI;QACA,CAAC;AAAES,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,EAAN,CAASI,EAAG;;;KAG7B;IACF,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,QAAQ,IACRf,GAAI;QACA,CAAC;AAAES,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,EAAN,CAASE,EAAG;;;;;QAK3B,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,EAAN,CAASI,EAAG;;;;;KAK7B;CAhCN;;AAmCA,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYJ,EAAAA,MAAZ;AAAoBE,EAAAA;AAApB,CAAD,KAAoC;AACvD,QAAMG,iBAAiB,GAAGZ,WAAW,EAArC;AACA,QAAMa,SAAS,GAAGf,WAAW,CAAC,CAAC;AAAEgB,IAAAA;AAAF,GAAD,KAAuBA,aAAxB,CAA7B;AAEA,sBACE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEL,QAAvB;AAAiC,IAAA,MAAM,EAAEF,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,SAAS,IAAID,iBAAb,GACGG,KAAK,CAACJ,QAAQ,CAACK,MAAT,IAAmB,CAApB,CAAL,CACGC,IADH,GAEGC,GAFH,CAEO,CAACC,CAAD,EAAIC,EAAJ,kBAAW,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFlB,CADH,GAIGT,QAAQ,CAACO,GAAT,CAAa,CAAC;AAAEE,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAAD,kBACX,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEH,EADP;AAEE,IAAA,kBAAkB,EAAE,CAACX,QAFvB;AAGE,IAAA,OAAO,EAAE;AAAEe,MAAAA,OAAO,EAAE;AAAX,KAHX;AAIE,IAAA,OAAO,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAJX;AAKE,IAAA,UAAU,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAEL,EAAjB;AAAqB,IAAA,IAAI,EAAEC,IAA3B;AAAiC,IAAA,KAAK,EAAEC,KAAxC;AAA+C,IAAA,KAAK,EAAEC,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CALN,CADF;AAmBD,CAvBD;;AAyBAb,YAAY,CAACgB,SAAb,GAAyB;AACvBf,EAAAA,QAAQ,EAAEZ,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC6B,MAA5B,EAAoCC,UADvB;AAEvBtB,EAAAA,MAAM,EAAER,SAAS,CAAC+B,IAFK;AAGvBrB,EAAAA,QAAQ,EAAEV,SAAS,CAAC+B;AAHG,CAAzB;AAMApB,YAAY,CAACqB,YAAb,GAA4B;AAC1BxB,EAAAA,MAAM,EAAE,KADkB;AAE1BE,EAAAA,QAAQ,EAAE;AAFgB,CAA5B;AAKA,eAAeC,YAAf","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport SkeletonCard from 'components/molecules/ProductCard/SkeletonCard';\nimport ProductCard from 'components/molecules/ProductCard/ProductCard';\nimport { motion } from 'framer-motion';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport useSkeleton from 'hooks/useSkeleton';\n\nconst GridWrapper = styled.section`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 15px;\n  ${({ theme }) => theme.mq.xs} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  ${({ theme }) => theme.mq.md} {\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 25px;\n  }\n\n  ${({ isWide }) =>\n    isWide &&\n    css`\n      ${({ theme }) => theme.mq.xl} {\n        grid-template-columns: repeat(4, 1fr);\n      }\n    `}\n  ${({ explicit }) =>\n    explicit &&\n    css`\n      ${({ theme }) => theme.mq.md} {\n        & div:nth-child(4) {\n          display: none;\n        }\n      }\n      ${({ theme }) => theme.mq.xl} {\n        & div:nth-child(4) {\n          display: block;\n        }\n      }\n    `}\n`;\n\nconst GridTemplate = ({ products, isWide, explicit }) => {\n  const isSkeletonLoading = useSkeleton();\n  const isLoading = useSelector(({ isDataLoading }) => isDataLoading);\n\n  return (\n    <GridWrapper explicit={explicit} isWide={isWide}>\n      {isLoading || isSkeletonLoading\n        ? Array(products.length || 6)\n            .fill()\n            .map((_, id) => <SkeletonCard key={id} />)\n        : products.map(({ id, name, price, image }) => (\n            <motion.div\n              key={id}\n              positionTransition={!explicit}\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 1 }}\n            >\n              <ProductCard id={id} name={name} price={price} image={image} />\n            </motion.div>\n          ))}\n    </GridWrapper>\n  );\n};\n\nGridTemplate.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isWide: PropTypes.bool,\n  explicit: PropTypes.bool,\n};\n\nGridTemplate.defaultProps = {\n  isWide: false,\n  explicit: false,\n};\n\nexport default GridTemplate;\n"]},"metadata":{},"sourceType":"module"}