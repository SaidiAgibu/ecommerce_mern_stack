{"ast":null,"code":"var _jsxFileName = \"/home/saidi/Desktop/TAYLOR+GOODS/FRONTEND/src/components/User/ResetPassword.jsx\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport \"./ResetPassword.css\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearErrors, resetPassword } from \"../../actions/userAction\";\nimport { useAlert } from \"react-alert\";\nimport MetaData from \"../layout/MetaData\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nconst ResetPassword = ({\n  history,\n  match\n}) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    error,\n    success,\n    loading\n  } = useSelector(state => state.forgotPassword);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const resetPasswordSubmit = e => {\n    e.preventDefault();\n    const myForm = new FormData();\n    myForm.set(\"password\", password);\n    myForm.set(\"confirmPassword\", confirmPassword);\n    dispatch(resetPassword(match.params.token, myForm));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      alert.success(\"Password Updated Successfully\");\n      history.push(\"/login\");\n    }\n  }, [dispatch, error, alert, history, success]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MetaData, {\n    title: \"Change Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resetPasswordContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resetPasswordBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"resetPasswordHeading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"Update Profile\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"resetPasswordForm\",\n    onSubmit: resetPasswordSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOpenIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"New Password\",\n    required: true,\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    required: true,\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Update\",\n    className: \"resetPasswordBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/FRONTEND/src/components/User/ResetPassword.jsx"],"names":["React","Fragment","useState","useEffect","Loader","useDispatch","useSelector","clearErrors","resetPassword","useAlert","MetaData","LockOpenIcon","LockIcon","ResetPassword","history","match","dispatch","alert","error","success","loading","state","forgotPassword","password","setPassword","confirmPassword","setConfirmPassword","resetPasswordSubmit","e","preventDefault","myForm","FormData","set","params","token","push","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./ResetPassword.css\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearErrors, resetPassword } from \"../../actions/userAction\";\nimport { useAlert } from \"react-alert\";\nimport MetaData from \"../layout/MetaData\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nconst ResetPassword = ({ history, match }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const { error, success, loading } = useSelector(\n    (state) => state.forgotPassword\n  );\n\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const resetPasswordSubmit = (e) => {\n    e.preventDefault();\n\n    const myForm = new FormData();\n\n    myForm.set(\"password\", password);\n    myForm.set(\"confirmPassword\", confirmPassword);\n\n    dispatch(resetPassword(match.params.token, myForm));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      alert.success(\"Password Updated Successfully\");\n\n      history.push(\"/login\");\n    }\n  }, [dispatch, error, alert, history, success]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title=\"Change Password\" />\n          <div className=\"resetPasswordContainer\">\n            <div className=\"resetPasswordBox\">\n              <h2 className=\"resetPasswordHeading\">Update Profile</h2>\n\n              <form\n                className=\"resetPasswordForm\"\n                onSubmit={resetPasswordSubmit}\n              >\n                <div>\n                  <LockOpenIcon />\n                  <input\n                    type=\"password\"\n                    placeholder=\"New Password\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </div>\n                <div className=\"loginPassword\">\n                  <LockIcon />\n                  <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    required\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Update\"\n                  className=\"resetPasswordBtn\"\n                />\n              </form>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}