{"ast":null,"code":"function _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar Chart$1 = _interopDefault(require('chart.js/auto'));\nvar merge = _interopDefault(require('lodash/merge'));\nvar assign = _interopDefault(require('lodash/assign'));\nvar find = _interopDefault(require('lodash/find'));\nvar chartjs = require('chart.js');\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar ChartComponent = React.forwardRef(function (props, ref) {\n  var id = props.id,\n    className = props.className,\n    _props$height = props.height,\n    height = _props$height === void 0 ? 150 : _props$height,\n    _props$width = props.width,\n    width = _props$width === void 0 ? 300 : _props$width,\n    _props$redraw = props.redraw,\n    redraw = _props$redraw === void 0 ? false : _props$redraw,\n    type = props.type,\n    data = props.data,\n    _props$options = props.options,\n    options = _props$options === void 0 ? {} : _props$options,\n    _props$plugins = props.plugins,\n    plugins = _props$plugins === void 0 ? [] : _props$plugins,\n    getDatasetAtEvent = props.getDatasetAtEvent,\n    getElementAtEvent = props.getElementAtEvent,\n    getElementsAtEvent = props.getElementsAtEvent,\n    fallbackContent = props.fallbackContent,\n    rest = _objectWithoutPropertiesLoose(props, [\"id\", \"className\", \"height\", \"width\", \"redraw\", \"type\", \"data\", \"options\", \"plugins\", \"getDatasetAtEvent\", \"getElementAtEvent\", \"getElementsAtEvent\", \"fallbackContent\"]);\n  var canvas = React.useRef(null);\n  var computedData = React.useMemo(function () {\n    if (typeof data === 'function') {\n      return canvas.current ? data(canvas.current) : {};\n    } else return merge({}, data);\n  }, [data, canvas.current]);\n  var _useState = React.useState(),\n    chart = _useState[0],\n    setChart = _useState[1];\n  React.useImperativeHandle(ref, function () {\n    return chart;\n  }, [chart]);\n  var renderChart = function renderChart() {\n    if (!canvas.current) return;\n    setChart(new Chart$1(canvas.current, {\n      type: type,\n      data: computedData,\n      options: options,\n      plugins: plugins\n    }));\n  };\n  var onClick = function onClick(e) {\n    if (!chart) return;\n    getDatasetAtEvent && getDatasetAtEvent(chart.getElementsAtEventForMode(e, 'dataset', {\n      intersect: true\n    }, false), e);\n    getElementAtEvent && getElementAtEvent(chart.getElementsAtEventForMode(e, 'nearest', {\n      intersect: true\n    }, false), e);\n    getElementsAtEvent && getElementsAtEvent(chart.getElementsAtEventForMode(e, 'index', {\n      intersect: true\n    }, false), e);\n  };\n  var updateChart = function updateChart() {\n    if (!chart) return;\n    if (options) {\n      chart.options = _extends({}, options);\n    }\n    if (!chart.config.data) {\n      chart.config.data = computedData;\n      chart.update();\n      return;\n    }\n    var _computedData$dataset = computedData.datasets,\n      newDataSets = _computedData$dataset === void 0 ? [] : _computedData$dataset,\n      newChartData = _objectWithoutPropertiesLoose(computedData, [\"datasets\"]);\n    var _chart$config$data$da = chart.config.data.datasets,\n      currentDataSets = _chart$config$data$da === void 0 ? [] : _chart$config$data$da;\n    assign(chart.config.data, newChartData);\n    chart.config.data.datasets = newDataSets.map(function (newDataSet) {\n      var currentDataSet = find(currentDataSets, function (d) {\n        return d.label === newDataSet.label && d.type === newDataSet.type;\n      });\n      if (!currentDataSet || !newDataSet.data) return newDataSet;\n      if (!currentDataSet.data) {\n        currentDataSet.data = [];\n      } else {\n        currentDataSet.data.length = newDataSet.data.length;\n      }\n      assign(currentDataSet.data, newDataSet.data);\n      return _extends({}, currentDataSet, newDataSet, {\n        data: currentDataSet.data\n      });\n    });\n    chart.update();\n  };\n  var destroyChart = function destroyChart() {\n    if (chart) chart.destroy();\n  };\n  React.useEffect(function () {\n    renderChart();\n    return function () {\n      return destroyChart();\n    };\n  }, []);\n  React.useEffect(function () {\n    if (redraw) {\n      destroyChart();\n      setTimeout(function () {\n        renderChart();\n      }, 0);\n    } else {\n      updateChart();\n    }\n  }, [props, computedData]);\n  return React__default.createElement(\"canvas\", Object.assign({}, rest, {\n    height: height,\n    width: width,\n    ref: canvas,\n    id: id,\n    className: className,\n    onClick: onClick,\n    \"data-testid\": 'canvas',\n    role: 'img'\n  }), fallbackContent);\n});\nvar Line = React.forwardRef(function (props, ref) {\n  return React__default.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'line',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Bar = React.forwardRef(function (props, ref) {\n  return React__default.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'bar',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Radar = React.forwardRef(function (props, ref) {\n  return React__default.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'radar',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Doughnut = React.forwardRef(function (props, ref) {\n  return React__default.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'doughnut',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar PolarArea = React.forwardRef(function (props, ref) {\n  return React__default.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'polarArea',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Bubble = React.forwardRef(function (props, ref) {\n  return React__default.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'bubble',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Pie = React.forwardRef(function (props, ref) {\n  return React__default.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'pie',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar Scatter = React.forwardRef(function (props, ref) {\n  return React__default.createElement(ChartComponent, Object.assign({}, props, {\n    type: 'scatter',\n    ref: ref,\n    options: props.options || {}\n  }));\n});\nvar defaults = chartjs.defaults;\nvar Chart = chartjs.Chart;\nexports.Bar = Bar;\nexports.Bubble = Bubble;\nexports.Chart = Chart;\nexports.Doughnut = Doughnut;\nexports.Line = Line;\nexports.Pie = Pie;\nexports.PolarArea = PolarArea;\nexports.Radar = Radar;\nexports.Scatter = Scatter;\nexports.default = ChartComponent;\nexports.defaults = defaults;","map":{"version":3,"sources":["../src/chart.tsx","../src/index.tsx"],"names":["ChartComponent","forwardRef","props","ref","id","className","height","width","redraw","type","data","options","plugins","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","fallbackContent","rest","canvas","useRef","computedData","useMemo","current","merge","chart","setChart","useState","useImperativeHandle","renderChart","Chart","onClick","e","getElementsAtEventForMode","intersect","updateChart","config","update","datasets","newDataSets","newChartData","currentDataSets","assign","map","newDataSet","currentDataSet","find","d","label","length","destroyChart","destroy","useEffect","setTimeout","role","Line","Bar","Radar","Doughnut","PolarArea","Bubble","Pie","Scatter","defaults","chartjs"],"mappings":"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","sourcesContent":["import React, {\n  useEffect,\n  useState,\n  useRef,\n  useImperativeHandle,\n  useMemo,\n  forwardRef,\n} from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Props } from './types';\n\nimport Chart from 'chart.js/auto';\n\nimport merge from 'lodash/merge';\nimport assign from 'lodash/assign';\nimport find from 'lodash/find';\n\nconst ChartComponent = forwardRef<Chart | undefined, Props>((props, ref) => {\n  const {\n    id,\n    className,\n    height = 150,\n    width = 300,\n    redraw = false,\n    type,\n    data,\n    options = {},\n    plugins = [],\n    getDatasetAtEvent,\n    getElementAtEvent,\n    getElementsAtEvent,\n    fallbackContent,\n    ...rest\n  } = props;\n\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  const computedData = useMemo<Chart.ChartData>(() => {\n    if (typeof data === 'function') {\n      return canvas.current ? data(canvas.current) : {};\n    } else return merge({}, data);\n  }, [data, canvas.current]);\n\n  const [chart, setChart] = useState<Chart>();\n\n  useImperativeHandle<Chart | undefined, Chart | undefined>(ref, () => chart, [\n    chart,\n  ]);\n\n  const renderChart = () => {\n    if (!canvas.current) return;\n\n    setChart(\n      new Chart(canvas.current, {\n        type,\n        data: computedData,\n        options,\n        plugins,\n      })\n    );\n  };\n\n  const onClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (!chart) return;\n\n    getDatasetAtEvent &&\n      getDatasetAtEvent(\n        chart.getElementsAtEventForMode(\n          e,\n          'dataset',\n          { intersect: true },\n          false\n        ),\n        e\n      );\n    getElementAtEvent &&\n      getElementAtEvent(\n        chart.getElementsAtEventForMode(\n          e,\n          'nearest',\n          { intersect: true },\n          false\n        ),\n        e\n      );\n    getElementsAtEvent &&\n      getElementsAtEvent(\n        chart.getElementsAtEventForMode(e, 'index', { intersect: true }, false),\n        e\n      );\n  };\n\n  const updateChart = () => {\n    if (!chart) return;\n\n    if (options) {\n      chart.options = { ...options };\n    }\n\n    if (!chart.config.data) {\n      chart.config.data = computedData;\n      chart.update();\n      return;\n    }\n\n    const { datasets: newDataSets = [], ...newChartData } = computedData;\n    const { datasets: currentDataSets = [] } = chart.config.data;\n\n    // copy values\n    assign(chart.config.data, newChartData);\n    chart.config.data.datasets = newDataSets.map((newDataSet: any) => {\n      // given the new set, find it's current match\n      const currentDataSet = find(\n        currentDataSets,\n        d => d.label === newDataSet.label && d.type === newDataSet.type\n      );\n\n      // There is no original to update, so simply add new one\n      if (!currentDataSet || !newDataSet.data) return newDataSet;\n\n      if (!currentDataSet.data) {\n        currentDataSet.data = [];\n      } else {\n        currentDataSet.data.length = newDataSet.data.length;\n      }\n\n      // copy in values\n      assign(currentDataSet.data, newDataSet.data);\n\n      // apply dataset changes, but keep copied data\n      return {\n        ...currentDataSet,\n        ...newDataSet,\n        data: currentDataSet.data,\n      };\n    });\n\n    chart.update();\n  };\n\n  const destroyChart = () => {\n    if (chart) chart.destroy();\n  };\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  useEffect(() => {\n    if (redraw) {\n      destroyChart();\n      setTimeout(() => {\n        renderChart();\n      }, 0);\n    } else {\n      updateChart();\n    }\n  }, [props, computedData]);\n\n  return (\n    <canvas\n      {...rest}\n      height={height}\n      width={width}\n      ref={canvas}\n      id={id}\n      className={className}\n      onClick={onClick}\n      data-testid='canvas'\n      role='img'\n    >\n      {fallbackContent}\n    </canvas>\n  );\n});\n\nexport default ChartComponent;\n","import React, { forwardRef } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Props } from './types';\nimport ChartComponent from './chart';\n// eslint-disable-next-line no-unused-vars\nimport Chart from 'chart.js/auto';\nimport * as chartjs from 'chart.js';\n\nexport const Line = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='line'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Bar = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='bar'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Radar = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='radar'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Doughnut = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='doughnut'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const PolarArea = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='polarArea'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Bubble = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='bubble'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Pie = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='pie'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Scatter = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='scatter'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const defaults = chartjs.defaults;\n\nexport const Chart = chartjs.Chart;\n\nexport default ChartComponent;\n"]},"metadata":{},"sourceType":"script"}