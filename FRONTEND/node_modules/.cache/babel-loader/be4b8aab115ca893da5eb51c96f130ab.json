{"ast":null,"code":"var _jsxFileName = \"/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/molecules/AddItemModal/AddForm.js\";\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport ErrorMsg from 'components/atoms/ErrorMsg/ErrorMsg';\nimport heartIcon from \"assets/icons/heart.svg\";\nimport PropTypes from 'prop-types';\nimport QuantityField from 'components/molecules/QuantityField/QuantityField';\nimport Button from 'components/atoms/Button/Button';\nimport Select from 'react-select';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { addItem, removeWishlistItem } from 'actions';\nimport { defaultStyle, errorStyle } from './SelectCustom';\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 340px;\n  & > * {\n    margin-top: 25px;\n  }\n`;\nconst QuantityFieldWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: ${({\n  isCentered\n}) => isCentered ? 'center' : 'stretch'};\n  flex-direction: column;\n  margin-bottom: 5px;\n`;\nconst StyledButton = styled(Button)`\n  background-color: transparent;\n  color: ${({\n  theme\n}) => theme.dark};\n`;\nconst SubmitButton = styled(Button)`\n  border-radius: ${({\n  isRound\n}) => isRound ? '50px' : '4px'};\n`;\nconst InnerWrapper = styled.div`\n  ${({\n  flex\n}) => flex && css`\n      display: flex;\n    `}\n`;\nconst WishlistButton = styled.button`\n  background-color: ${({\n  theme\n}) => theme.white};\n  background: url(${heartIcon}) no-repeat center;\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.25);\n  border-radius: 4px;\n  background-size: 50%;\n  margin: 10px;\n  padding: 0 28px;\n  cursor: pointer;\n  transition: 0.35s;\n  &:hover {\n    box-shadow: 0 0 8px 0 rgba(111, 179, 235, 0.8);\n  }\n  ${({\n  inWishlist\n}) => inWishlist && css`\n      background-color: ${({\n  theme\n}) => theme.white100};\n      box-shadow: 0 0 8px 0 rgba(111, 179, 235, 0.4);\n    `}\n`;\n\nconst AddForm = ({\n  redirect,\n  isModal,\n  itemData,\n  onFinishFunc\n}) => {\n  const [isErrorVisible, setErrorVisibility] = useState(false);\n  const {\n    id,\n    image,\n    price,\n    name\n    /*size*/\n\n  } = itemData;\n  /*const sizeOptions = size.map(({ value, limit }) => ({\n    value,\n    label: value.toUpperCase(),\n    limit,\n  }));*/\n\n  const dispatch = useDispatch();\n  const wishlistItems = useSelector(({\n    wishlist\n  }) => wishlist);\n\n  const isInWishlist = productID => {\n    return wishlistItems.some(item => productID === item.id);\n  };\n\n  const handleWishlist = productID => {\n    if (isInWishlist(productID)) {\n      dispatch(removeWishlistItem(productID, 'wishlist'));\n    } else {\n      const newWishlistItem = {\n        id,\n        image,\n        price,\n        name\n      };\n      dispatch(addItem(newWishlistItem, 'wishlist'));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      itemSize: '',\n      quantity: 1\n    },\n    validate: ({\n      itemSize,\n      quantity\n    }) => {\n      const errors = {};\n\n      if (!itemSize) {\n        errors.itemSize = 'You need to select size!';\n      }\n      /*if (\n        size.some(\n          ({ value, limit }) => value === itemSize && quantity >= limit,\n        )\n      )*/\n\n\n      {\n        setErrorVisibility(true);\n        setTimeout(() => setErrorVisibility(false), 1500);\n      }\n      return errors;\n    },\n    onSubmit: ({\n      itemSize,\n      quantity\n    }, {\n      setSubmitting\n    }) => {\n      const {\n        limit\n      } = sizeOptions.find(({\n        value\n      }) => value === itemSize);\n      const newItem = { ...itemData,\n        size: itemSize,\n        limit,\n        quantity\n      };\n      dispatch(addItem(newItem, 'cart'));\n      setTimeout(() => {\n        onFinishFunc();\n        setSubmitting(false);\n      }, 1500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    touched,\n    errors,\n    setFieldTouched,\n    setFieldValue,\n    handleSubmit,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(StyledForm, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: errors.itemSize && touched.itemSize && errors.itemSize || 'Size',\n    styles: errors.itemSize && touched.itemSize && errors.itemSize ? errorStyle : defaultStyle,\n    name: \"itemSize\",\n    options: sizeOptions,\n    isOptionDisabled: option => option.limit === 0,\n    onChange: option => {\n      setFieldValue('itemSize', option.value);\n      setFieldValue('quantity', 1);\n      setFieldTouched('itemSize', false);\n    },\n    onBlur: () => setFieldTouched('itemSize', true),\n    isSearchable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(QuantityFieldWrapper, {\n    isCentered: isModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QuantityField, {\n    name: \"quantity\",\n    big: true,\n    subtract: () => values.quantity > 1 && setFieldValue('quantity', values.quantity - 1),\n    add: () => sizeOptions.some(({\n      value,\n      limit\n    }) => value === values.itemSize && limit > values.quantity) && setFieldValue('quantity', values.quantity + 1),\n    value: values.quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMsg, {\n    active: isErrorVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Product limit reached!\")), /*#__PURE__*/React.createElement(InnerWrapper, {\n    flex: !isModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SubmitButton, {\n    isRound: isModal,\n    disabled: isSubmitting,\n    secondary: \"true\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"Add to cart\"), isModal ? /*#__PURE__*/React.createElement(StyledButton, {\n    type: \"button\",\n    onClick: redirect,\n    disabled: isSubmitting,\n    secondary: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, \"View full details\") : /*#__PURE__*/React.createElement(WishlistButton, {\n    type: \"button\",\n    inWishlist: isInWishlist(id),\n    onClick: () => handleWishlist(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }))));\n};\n\nAddForm.propTypes = {\n  itemData: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.number, PropTypes.array])).isRequired,\n  redirect: PropTypes.func,\n  onFinishFunc: PropTypes.func.isRequired,\n  isModal: PropTypes.bool\n};\nAddForm.defaultProps = {\n  isModal: false,\n  redirect: null\n};\nexport default AddForm;","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/molecules/AddItemModal/AddForm.js"],"names":["React","useState","styled","css","ErrorMsg","PropTypes","QuantityField","Button","Select","useDispatch","useSelector","Formik","addItem","removeWishlistItem","defaultStyle","errorStyle","StyledForm","form","QuantityFieldWrapper","div","isCentered","StyledButton","theme","dark","SubmitButton","isRound","InnerWrapper","flex","WishlistButton","button","white","heartIcon","inWishlist","white100","AddForm","redirect","isModal","itemData","onFinishFunc","isErrorVisible","setErrorVisibility","id","image","price","name","dispatch","wishlistItems","wishlist","isInWishlist","productID","some","item","handleWishlist","newWishlistItem","itemSize","quantity","errors","setTimeout","setSubmitting","limit","sizeOptions","find","value","newItem","size","values","touched","setFieldTouched","setFieldValue","handleSubmit","isSubmitting","option","propTypes","objectOf","oneOfType","string","object","number","array","isRequired","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport ErrorMsg from 'components/atoms/ErrorMsg/ErrorMsg';\nimport heartIcon from 'assets/icons/heart.svg';\nimport PropTypes from 'prop-types';\nimport QuantityField from 'components/molecules/QuantityField/QuantityField';\nimport Button from 'components/atoms/Button/Button';\nimport Select from 'react-select';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { addItem, removeWishlistItem } from 'actions';\nimport { defaultStyle, errorStyle } from './SelectCustom';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 340px;\n  & > * {\n    margin-top: 25px;\n  }\n`;\n\nconst QuantityFieldWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: ${({ isCentered }) => (isCentered ? 'center' : 'stretch')};\n  flex-direction: column;\n  margin-bottom: 5px;\n`;\n\nconst StyledButton = styled(Button)`\n  background-color: transparent;\n  color: ${({ theme }) => theme.dark};\n`;\n\nconst SubmitButton = styled(Button)`\n  border-radius: ${({ isRound }) => (isRound ? '50px' : '4px')};\n`;\n\nconst InnerWrapper = styled.div`\n  ${({ flex }) =>\n    flex &&\n    css`\n      display: flex;\n    `}\n`;\n\nconst WishlistButton = styled.button`\n  background-color: ${({ theme }) => theme.white};\n  background: url(${heartIcon}) no-repeat center;\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.25);\n  border-radius: 4px;\n  background-size: 50%;\n  margin: 10px;\n  padding: 0 28px;\n  cursor: pointer;\n  transition: 0.35s;\n  &:hover {\n    box-shadow: 0 0 8px 0 rgba(111, 179, 235, 0.8);\n  }\n  ${({ inWishlist }) =>\n    inWishlist &&\n    css`\n      background-color: ${({ theme }) => theme.white100};\n      box-shadow: 0 0 8px 0 rgba(111, 179, 235, 0.4);\n    `}\n`;\n\nconst AddForm = ({ redirect, isModal, itemData, onFinishFunc }) => {\n  const [isErrorVisible, setErrorVisibility] = useState(false);\n\nconst { id, image, price, name, /*size*/ } = itemData;\n  /*const sizeOptions = size.map(({ value, limit }) => ({\n    value,\n    label: value.toUpperCase(),\n    limit,\n  }));*/\n\n  const dispatch = useDispatch();\n  const wishlistItems = useSelector(({ wishlist }) => wishlist);\n\n  const isInWishlist = productID => {\n    return wishlistItems.some(item => productID === item.id);\n  };\n\n  const handleWishlist = productID => {\n    if (isInWishlist(productID)) {\n      dispatch(removeWishlistItem(productID, 'wishlist'));\n    } else {\n      const newWishlistItem = { id, image, price, name };\n      dispatch(addItem(newWishlistItem, 'wishlist'));\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ itemSize: '', quantity: 1 }}\n      validate={({ itemSize, quantity }) => {\n        const errors = {};\n        if (!itemSize) {\n          errors.itemSize = 'You need to select size!';\n        }\n        /*if (\n          size.some(\n            ({ value, limit }) => value === itemSize && quantity >= limit,\n          )\n        )*/ {\n          setErrorVisibility(true);\n          setTimeout(() => setErrorVisibility(false), 1500);\n        }\n        return errors;\n      }}\n      onSubmit={({ itemSize, quantity }, { setSubmitting }) => {\n        const { limit } = sizeOptions.find(({ value }) => value === itemSize);\n        const newItem = {\n          ...itemData,\n          size: itemSize,\n          limit,\n          quantity,\n        };\n        dispatch(addItem(newItem, 'cart'));\n        setTimeout(() => {\n          onFinishFunc();\n          setSubmitting(false);\n        }, 1500);\n      }}\n    >\n      {({\n        values,\n        touched,\n        errors,\n        setFieldTouched,\n        setFieldValue,\n        handleSubmit,\n        isSubmitting,\n      }) => (\n        <StyledForm onSubmit={handleSubmit}>\n          <Select\n            placeholder={\n              (errors.itemSize && touched.itemSize && errors.itemSize) || 'Size'\n            }\n            styles={\n              errors.itemSize && touched.itemSize && errors.itemSize\n                ? errorStyle\n                : defaultStyle\n            }\n            name=\"itemSize\"\n            options={sizeOptions}\n            isOptionDisabled={option => option.limit === 0}\n            onChange={option => {\n              setFieldValue('itemSize', option.value);\n              setFieldValue('quantity', 1);\n              setFieldTouched('itemSize', false);\n            }}\n            onBlur={() => setFieldTouched('itemSize', true)}\n            isSearchable={false}\n          />\n          <QuantityFieldWrapper isCentered={isModal}>\n            <QuantityField\n              name=\"quantity\"\n              big\n              subtract={() =>\n                values.quantity > 1 &&\n                setFieldValue('quantity', values.quantity - 1)\n              }\n              add={() =>\n                sizeOptions.some(\n                  ({ value, limit }) =>\n                    value === values.itemSize && limit > values.quantity,\n                ) && setFieldValue('quantity', values.quantity + 1)\n              }\n              value={values.quantity}\n            />\n            <ErrorMsg active={isErrorVisible}>Product limit reached!</ErrorMsg>\n          </QuantityFieldWrapper>\n          <InnerWrapper flex={!isModal}>\n            <SubmitButton\n              isRound={isModal}\n              disabled={isSubmitting}\n              secondary=\"true\"\n              type=\"submit\"\n            >\n              Add to cart\n            </SubmitButton>\n            {isModal ? (\n              <StyledButton\n                type=\"button\"\n                onClick={redirect}\n                disabled={isSubmitting}\n                secondary=\"true\"\n              >\n                View full details\n              </StyledButton>\n            ) : (\n              <WishlistButton\n                type=\"button\"\n                inWishlist={isInWishlist(id)}\n                onClick={() => handleWishlist(id)}\n              />\n            )}\n          </InnerWrapper>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\nAddForm.propTypes = {\n  itemData: PropTypes.objectOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.object,\n      PropTypes.number,\n      PropTypes.array,\n    ]),\n  ).isRequired,\n  redirect: PropTypes.func,\n  onFinishFunc: PropTypes.func.isRequired,\n  isModal: PropTypes.bool,\n};\n\nAddForm.defaultProps = {\n  isModal: false,\n  redirect: null,\n};\n\nexport default AddForm;\n"]},"metadata":{},"sourceType":"module"}