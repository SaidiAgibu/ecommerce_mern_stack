{"ast":null,"code":"var _jsxFileName = \"/home/saidi/Desktop/TAYLOR+GOODS/FRONTEND/src/components/Header/SearchBar.js\";\nimport React, { useContext, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n//import commonContext from '../../contexts/common/commonContext';\n//import productsData from '../../data/productsData';\n//import useOutsideClose from '../../hooks/useOutsideClose';\n//import useScrollDisable from '../../hooks/useScrollDisable';\n// import { AiOutlineSearch } from 'react-icons/ai';\n\nconst SearchBar = () => {\n  const {\n    isSearchOpen,\n    toggleSearch,\n    searchResults,\n    setSearchResults\n  } = useContext();\n  const searchRef = useRef();\n\n  // closing the SearchBar\n  const closeSearch = () => {\n    toggleSearch(false);\n    setSearchResults([]);\n  };\n\n  /*useOutsideClose(searchRef, closeSearch);*/\n\n  /*useScrollDisable(isSearchOpen);*/\n\n  // handling Search\n  const handleSearching = e => {\n    const searchedTerm = e.target.value.toLowerCase().trim();\n\n    /*  const updatedSearchResults = productsData.filter(item => item.title.toLowerCase().includes(searchedTerm));*/\n\n    searchedTerm === '' ? setSearchResults([]) : setSearchResults(updatedSearchResults);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isSearchOpen && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"searchbar\",\n    className: \"backdrop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchbar_content\",\n    ref: searchRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    className: \"input_field\",\n    placeholder: \"Search for product...\",\n    onChange: handleSearching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  })), searchResults.length !== 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search_results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }, searchResults.map(item => {\n    const {\n      id,\n      title,\n      path\n    } = item;\n    return /*#__PURE__*/React.createElement(Link, {\n      to: `${path}${id}`,\n      onClick: closeSearch,\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 53\n      }\n    }, title);\n  })))));\n};\nexport default SearchBar;","map":{"version":3,"names":["React","useContext","useRef","Link","SearchBar","isSearchOpen","toggleSearch","searchResults","setSearchResults","searchRef","closeSearch","handleSearching","e","searchedTerm","target","value","toLowerCase","trim","updatedSearchResults","length","map","item","id","title","path"],"sources":["/home/saidi/Desktop/TAYLOR+GOODS/FRONTEND/src/components/Header/SearchBar.js"],"sourcesContent":["import React, { useContext, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n//import commonContext from '../../contexts/common/commonContext';\n//import productsData from '../../data/productsData';\n//import useOutsideClose from '../../hooks/useOutsideClose';\n//import useScrollDisable from '../../hooks/useScrollDisable';\n// import { AiOutlineSearch } from 'react-icons/ai';\n\n\nconst SearchBar = () => {\n\n    const { isSearchOpen, toggleSearch, searchResults, setSearchResults } = useContext();\n\n    const searchRef = useRef();\n\n    // closing the SearchBar\n    const closeSearch = () => {\n        toggleSearch(false);\n        setSearchResults([]);\n    };\n\n    /*useOutsideClose(searchRef, closeSearch);*/\n\n    /*useScrollDisable(isSearchOpen);*/\n\n\n    // handling Search\n    const handleSearching = (e) => {\n        const searchedTerm = e.target.value.toLowerCase().trim();\n\n      /*  const updatedSearchResults = productsData.filter(item => item.title.toLowerCase().includes(searchedTerm));*/\n\n        searchedTerm === '' ? setSearchResults([]) : setSearchResults(updatedSearchResults);\n    };\n\n\n    return (\n        <>\n            {\n                isSearchOpen && (\n                    <div id=\"searchbar\" className=\"backdrop\">\n                        <div className=\"searchbar_content\" ref={searchRef}>\n                            <div className=\"search_box\">\n                                <input\n                                    type=\"search\"\n                                    className=\"input_field\"\n                                    placeholder=\"Search for product...\"\n                                    onChange={handleSearching}\n                                />\n                                {/* <button\n                                    type=\"button\"\n                                    className=\"btn\"\n                                    disabled={searchResults.length === 0}\n                                >\n                                    <AiOutlineSearch />\n                                </button> */}\n                            </div>\n\n                            {\n                                searchResults.length !== 0 && (\n                                    <div className=\"search_results\">\n                                        {\n                                            searchResults.map(item => {\n                                                const { id, title, path } = item;\n                                                return (\n                                                    <Link\n                                                        to={`${path}${id}`}\n                                                        onClick={closeSearch}\n                                                        key={id}\n                                                    >\n                                                        {title}\n                                                    </Link>\n                                                );\n                                            })\n                                        }\n                                    </div>\n                                )\n                            }\n                        </div>\n                    </div>\n                )\n            }\n        </>\n    );\n};\n\nexport default SearchBar;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AACjD,SAASC,IAAI,QAAQ,kBAAkB;AACvC;AACA;AACA;AACA;AACA;;AAGA,MAAMC,SAAS,GAAG,MAAM;EAEpB,MAAM;IAAEC,YAAY;IAAEC,YAAY;IAAEC,aAAa;IAAEC;EAAiB,CAAC,GAAGP,UAAU,EAAE;EAEpF,MAAMQ,SAAS,GAAGP,MAAM,EAAE;;EAE1B;EACA,MAAMQ,WAAW,GAAG,MAAM;IACtBJ,YAAY,CAAC,KAAK,CAAC;IACnBE,gBAAgB,CAAC,EAAE,CAAC;EACxB,CAAC;;EAED;;EAEA;;EAGA;EACA,MAAMG,eAAe,GAAIC,CAAC,IAAK;IAC3B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,IAAI,EAAE;;IAE1D;;IAEEJ,YAAY,KAAK,EAAE,GAAGL,gBAAgB,CAAC,EAAE,CAAC,GAAGA,gBAAgB,CAACU,oBAAoB,CAAC;EACvF,CAAC;EAGD,oBACI,0CAEQb,YAAY,iBACR;IAAK,EAAE,EAAC,WAAW;IAAC,SAAS,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACpC;IAAK,SAAS,EAAC,mBAAmB;IAAC,GAAG,EAAEI,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC9C;IAAK,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACvB;IACI,IAAI,EAAC,QAAQ;IACb,SAAS,EAAC,aAAa;IACvB,WAAW,EAAC,uBAAuB;IACnC,QAAQ,EAAEE,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC5B,CAQA,EAGFJ,aAAa,CAACY,MAAM,KAAK,CAAC,iBACtB;IAAK,SAAS,EAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEvBZ,aAAa,CAACa,GAAG,CAACC,IAAI,IAAI;IACtB,MAAM;MAAEC,EAAE;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGH,IAAI;IAChC,oBACI,oBAAC,IAAI;MACD,EAAE,EAAG,GAAEG,IAAK,GAAEF,EAAG,EAAE;MACnB,OAAO,EAAEZ,WAAY;MACrB,GAAG,EAAEY,EAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEPC,KAAK,CACH;EAEf,CAAC,CAAC,CAGb,CAEH,CAEb,CAEN;AAEX,CAAC;AAED,eAAenB,SAAS"},"metadata":{},"sourceType":"module"}