{"ast":null,"code":"var _jsxFileName = \"/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/molecules/AddItemModal/AddItemModal.js\";\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport RemoveBtn from 'components/atoms/RemoveBtn/RemoveBtn';\nimport { useSelector } from 'react-redux';\nimport AddForm from 'components/molecules/AddItemModal/AddForm';\nimport './modalStyle.css';\nModal.setAppElement(document.getElementById('root'));\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\nconst ItemWrapper = styled.div`\n  position: relative;\n  display: flex;\n  color: ${({\n  theme\n}) => theme.dark300};\n`;\nconst ImageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Image = styled.img`\n  display: block;\n  width: 90px;\n  border-radius: 5px;\n`;\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0 10px 0 8px;\n`;\nconst Name = styled.h3`\n  margin: 0 0 5px;\n  padding-right: 15px;\n  font-weight: ${({\n  theme\n}) => theme.medium};\n  font-size: ${({\n  theme\n}) => theme.fontSize.s};\n`;\nconst Price = styled.span`\n  color: ${({\n  theme\n}) => theme.gray100};\n  font-weight: ${({\n  theme\n}) => theme.medium};\n  font-size: ${({\n  theme\n}) => theme.fontSize.xsm};\n`;\n\nconst AddItemModal = ({\n  isActive,\n  itemID,\n  close\n}) => {\n  const [isModalOpen, setModalOpen] = useState(isActive);\n  const [isRedirect, setRedirect] = useState(false);\n  const allContainers = useSelector(({\n    products,\n    wishlist,\n    featured\n  }) => [...products, ...wishlist, ...featured]);\n  const itemData = allContainers.find(({\n    id\n  }) => id === itemID);\n  const {\n    image,\n    name,\n    price\n  } = itemData;\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n    setTimeout(close, 300);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isRedirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: `/catalog/${itemID}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    closeTimeoutMS: 300,\n    isOpen: isModalOpen,\n    onRequestClose: handleModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ItemWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RemoveBtn, {\n    onClick: handleModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ImageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: image,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Name, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, name), /*#__PURE__*/React.createElement(Price, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"$\", price))), /*#__PURE__*/React.createElement(AddForm, {\n    isModal: true,\n    itemData: itemData,\n    redirect: () => setRedirect(true),\n    onFinishFunc: handleModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }))));\n};\n\nAddItemModal.propTypes = {\n  itemID: PropTypes.number.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  close: PropTypes.func.isRequired\n};\nexport default AddItemModal;","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/molecules/AddItemModal/AddItemModal.js"],"names":["React","useState","Modal","Redirect","styled","PropTypes","RemoveBtn","useSelector","AddForm","setAppElement","document","getElementById","Wrapper","div","ItemWrapper","theme","dark300","ImageWrapper","Image","img","Content","Name","h3","medium","fontSize","s","Price","span","gray100","xsm","AddItemModal","isActive","itemID","close","isModalOpen","setModalOpen","isRedirect","setRedirect","allContainers","products","wishlist","featured","itemData","find","id","image","name","price","handleModalClose","setTimeout","propTypes","number","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport RemoveBtn from 'components/atoms/RemoveBtn/RemoveBtn';\nimport { useSelector } from 'react-redux';\nimport AddForm from 'components/molecules/AddItemModal/AddForm';\nimport './modalStyle.css';\n\nModal.setAppElement(document.getElementById('root'));\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst ItemWrapper = styled.div`\n  position: relative;\n  display: flex;\n  color: ${({ theme }) => theme.dark300};\n`;\n\nconst ImageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Image = styled.img`\n  display: block;\n  width: 90px;\n  border-radius: 5px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0 10px 0 8px;\n`;\n\nconst Name = styled.h3`\n  margin: 0 0 5px;\n  padding-right: 15px;\n  font-weight: ${({ theme }) => theme.medium};\n  font-size: ${({ theme }) => theme.fontSize.s};\n`;\n\nconst Price = styled.span`\n  color: ${({ theme }) => theme.gray100};\n  font-weight: ${({ theme }) => theme.medium};\n  font-size: ${({ theme }) => theme.fontSize.xsm};\n`;\n\nconst AddItemModal = ({ isActive, itemID, close }) => {\n  const [isModalOpen, setModalOpen] = useState(isActive);\n  const [isRedirect, setRedirect] = useState(false);\n\n  const allContainers = useSelector(({ products, wishlist, featured }) => [\n    ...products,\n    ...wishlist,\n    ...featured,\n  ]);\n\n  const itemData = allContainers.find(({ id }) => id === itemID);\n\n  const { image, name, price } = itemData;\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n    setTimeout(close, 300);\n  };\n\n  return (\n    <>\n      {isRedirect && <Redirect to={`/catalog/${itemID}`} />}\n      <Modal\n        closeTimeoutMS={300}\n        isOpen={isModalOpen}\n        onRequestClose={handleModalClose}\n      >\n        <Wrapper>\n          <ItemWrapper>\n            <RemoveBtn onClick={handleModalClose} />\n            <ImageWrapper>\n              <Image src={image} alt={name} />\n            </ImageWrapper>\n            <Content>\n              <Name>{name}</Name>\n              <Price>${price}</Price>\n            </Content>\n          </ItemWrapper>\n          <AddForm\n            isModal\n            itemData={itemData}\n            redirect={() => setRedirect(true)}\n            onFinishFunc={handleModalClose}\n          />\n        </Wrapper>\n      </Modal>\n    </>\n  );\n};\n\nAddItemModal.propTypes = {\n  itemID: PropTypes.number.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  close: PropTypes.func.isRequired,\n};\n\nexport default AddItemModal;\n"]},"metadata":{},"sourceType":"module"}