{"ast":null,"code":"var _jsxFileName = \"/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/organisms/Navigation/ReturnToTop.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport arrowIcon from \"assets/icons/arrow-up.svg\";\nimport { animateScroll as scroll } from 'react-scroll';\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 50px;\n  height: 50px;\n  background-color: ${({\n  theme\n}) => theme.white100};\n  z-index: ${({\n  theme\n}) => theme.zIndex.level7};\n  padding: 10px;\n  border-radius: 4px;\n  box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: 0.2s all;\n  opacity: ${({\n  isVisible\n}) => isVisible ? '1' : '0'};\n  visibility: ${({\n  isVisible\n}) => isVisible ? 'visible' : 'hidden'};\n  ${({\n  theme\n}) => theme.mq.lg} {\n    bottom: 40px;\n    right: 40px;\n  }\n`;\nconst Icon = styled.i`\n  display: block;\n  width: 18px;\n  height: 18px;\n  background: url(${arrowIcon}) no-repeat center;\n  background-size: 100%;\n`;\n\nconst ReturnToTop = ({\n  isVisible\n}) => /*#__PURE__*/React.createElement(Wrapper, {\n  isVisible: isVisible,\n  onClick: () => scroll.scrollToTop(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Icon, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}));\n\nReturnToTop.propTypes = {\n  isVisible: PropTypes.bool.isRequired\n};\nexport default ReturnToTop;","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/components/organisms/Navigation/ReturnToTop.js"],"names":["React","styled","PropTypes","animateScroll","scroll","Wrapper","div","theme","white100","zIndex","level7","isVisible","mq","lg","Icon","i","arrowIcon","ReturnToTop","scrollToTop","propTypes","bool","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,cAAxC;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAI;;;;;;sBAML,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,QAAS;aACvC,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,MAAN,CAAaC,MAAO;;;;;;;;;aASnC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,GAAH,GAAS,GAAK;gBACxC,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,SAAH,GAAe,QAAU;IAClE,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,EAAN,CAASC,EAAG;;;;CAlB/B;AAwBA,MAAMC,IAAI,GAAGb,MAAM,CAACc,CAAE;;;;oBAIFC,SAAU;;CAJ9B;;AAQA,MAAMC,WAAW,GAAG,CAAC;AAAEN,EAAAA;AAAF,CAAD,kBAClB,oBAAC,OAAD;AAAS,EAAA,SAAS,EAAEA,SAApB;AAA+B,EAAA,OAAO,EAAE,MAAMP,MAAM,CAACc,WAAP,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF;;AAMAD,WAAW,CAACE,SAAZ,GAAwB;AACtBR,EAAAA,SAAS,EAAET,SAAS,CAACkB,IAAV,CAAeC;AADJ,CAAxB;AAIA,eAAeJ,WAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport arrowIcon from 'assets/icons/arrow-up.svg';\nimport { animateScroll as scroll } from 'react-scroll';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 50px;\n  height: 50px;\n  background-color: ${({ theme }) => theme.white100};\n  z-index: ${({ theme }) => theme.zIndex.level7};\n  padding: 10px;\n  border-radius: 4px;\n  box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: 0.2s all;\n  opacity: ${({ isVisible }) => (isVisible ? '1' : '0')};\n  visibility: ${({ isVisible }) => (isVisible ? 'visible' : 'hidden')};\n  ${({ theme }) => theme.mq.lg} {\n    bottom: 40px;\n    right: 40px;\n  }\n`;\n\nconst Icon = styled.i`\n  display: block;\n  width: 18px;\n  height: 18px;\n  background: url(${arrowIcon}) no-repeat center;\n  background-size: 100%;\n`;\n\nconst ReturnToTop = ({ isVisible }) => (\n  <Wrapper isVisible={isVisible} onClick={() => scroll.scrollToTop()}>\n    <Icon />\n  </Wrapper>\n);\n\nReturnToTop.propTypes = {\n  isVisible: PropTypes.bool.isRequired,\n};\n\nexport default ReturnToTop;\n"]},"metadata":{},"sourceType":"module"}