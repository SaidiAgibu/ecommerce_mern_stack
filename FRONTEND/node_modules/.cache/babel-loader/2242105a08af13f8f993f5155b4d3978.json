{"ast":null,"code":"import axios from 'axios';\nimport { featuredEndP } from 'helpers/endpoints';\nimport { toast } from 'react-toastify';\nexport const FETCH_ITEMS_REQUEST = 'FETCH_ITEMS_REQUEST';\nexport const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS';\nexport const FETCH_NEW_ITEMS_SUCCESS = 'FETCH_NEW_ITEMS_SUCCESS';\nexport const FETCH_ITEMS_FAILURE = 'FETCH_ITEMS_FAILURE';\nexport const FETCH_CATEGORIES_REQUEST = 'FETCH_CATEGORIES_REQUEST';\nexport const FETCH_CATEGORIES_SUCCESS = 'FETCH_CATEGORIES_SUCCESS';\nexport const FETCH_CATEGORIES_FAILURE = 'FETCH_CATEGORIES_FAILURE';\nexport const UPDATE_STORE_REQUEST = 'UPDATE_STORE_REQUEST';\nexport const UPDATE_STORE_SUCCESS = 'UPDATE_STORE_SUCCESS';\nexport const UPDATE_STORE_FAILURE = 'UPDATE_STORE_FAILURE';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const UPDATE_CART_ITEM = 'UPDATE_CART_ITEM';\nexport const REMOVE_CART_ITEM = 'REMOVE_CART_ITEM';\nexport const REMOVE_WISHLIST_ITEM = 'REMOVE_WISHLIST_ITEM';\nexport const SHOW_LOADING = 'SHOW_LOADING';\nexport const HIDE_LOADING = 'HIDE_LOADING';\nexport const SET_SEARCH_VALUE = 'SET_SEARCH_VALUE';\nexport const API_URL = `http://localhost:5000/api`;\nexport const PRODUCT_FETCH_LIMIT = 12;\nexport const fetchProducts = (endpoint = '/products', isNew = false) => async (dispatch, getState) => {\n  const start = isNew ? getState().products.length : 0;\n  const limit = isNew ? getState().products.length + PRODUCT_FETCH_LIMIT : PRODUCT_FETCH_LIMIT;\n  const actionType = isNew ? FETCH_NEW_ITEMS_SUCCESS : FETCH_ITEMS_SUCCESS;\n  const URL = endpoint === featuredEndP ? `${API_URL}/products?${endpoint}` : `${API_URL}/products?_start=${start}&_limit=${limit + endpoint}`;\n  dispatch({\n    type: FETCH_ITEMS_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(URL);\n    dispatch({\n      type: actionType,\n      payload: {\n        container: endpoint === featuredEndP ? 'featured' : 'products',\n        items: data.map(({\n          id,\n          name,\n          description,\n          category,\n          image,\n          size,\n          price\n        }) => ({\n          id,\n          name,\n          description,\n          category: category.name,\n          image,\n          size,\n          price: price.toFixed(2)\n        }))\n      }\n    });\n  } catch (err) {\n    toast.error(`Could not fetch items!`);\n    dispatch({\n      type: FETCH_ITEMS_FAILURE,\n      payload: err\n    });\n  }\n};\nexport const fetchCategories = () => async dispatch => {\n  dispatch({\n    type: FETCH_CATEGORIES_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(`${API_URL}/categories`);\n    dispatch({\n      type: FETCH_CATEGORIES_SUCCESS,\n      payload: data.map(({\n        name,\n        total\n      }) => ({\n        name,\n        total\n      }))\n    });\n  } catch (err) {\n    toast.error(`Could not fetch categories!`);\n    dispatch({\n      type: FETCH_CATEGORIES_FAILURE,\n      payload: err\n    });\n  }\n};\nexport const updateCartItem = item => dispatch => {\n  dispatch({\n    type: SHOW_LOADING,\n    payload: 700\n  });\n  setTimeout(() => {\n    dispatch({\n      type: UPDATE_CART_ITEM,\n      payload: item\n    });\n    dispatch({\n      type: HIDE_LOADING\n    });\n  }, 700);\n};\nexport const updateStore = (itemID, itemSize, quantity) => async dispatch => {\n  dispatch({\n    type: UPDATE_STORE_REQUEST,\n    payload: 3500\n  });\n\n  try {\n    const {\n      data: {\n        size\n      }\n    } = await axios.get(`${API_URL}/products/${itemID}`);\n    const newSize = size.map(element => element.value === itemSize ? { ...element,\n      limit: element.limit - quantity\n    } : element);\n    await axios.put(`${API_URL}/products/${itemID}`, {\n      size: newSize\n    });\n    setTimeout(() => {\n      dispatch({\n        type: UPDATE_STORE_SUCCESS\n      });\n      dispatch(fetchProducts(featuredEndP));\n    }, 3500);\n  } catch (err) {\n    toast.error(`Something went wrong!`);\n    dispatch({\n      type: UPDATE_STORE_FAILURE,\n      payload: err\n    });\n  }\n};\nexport const addItem = (item, container) => (dispatch, getState) => {\n  if (getState().cart.some(({\n    id,\n    name\n  }) => id === item.id && name === item.name)) {\n    const updatedItem = { ...item,\n      quantity: item.quantity + 1\n    };\n    dispatch(updateCartItem(updatedItem));\n  } else {\n    dispatch({\n      type: SHOW_LOADING,\n      payload: 1500\n    });\n    setTimeout(() => {\n      dispatch({\n        type: ADD_ITEM,\n        payload: {\n          item,\n          container\n        }\n      });\n      dispatch({\n        type: HIDE_LOADING\n      });\n    }, 1500);\n  }\n};\nexport const removeCartItem = (itemID, container, size = '') => dispatch => {\n  dispatch({\n    type: SHOW_LOADING,\n    payload: 1000\n  });\n  setTimeout(() => {\n    dispatch({\n      type: REMOVE_CART_ITEM,\n      payload: {\n        itemID,\n        size,\n        container\n      }\n    });\n    dispatch({\n      type: HIDE_LOADING\n    });\n  }, 1000);\n};\nexport const removeWishlistItem = itemID => dispatch => {\n  dispatch({\n    type: SHOW_LOADING,\n    payload: 600\n  });\n  setTimeout(() => {\n    dispatch({\n      type: REMOVE_WISHLIST_ITEM,\n      payload: {\n        itemID\n      }\n    });\n    dispatch({\n      type: HIDE_LOADING\n    });\n  }, 600);\n};\nexport const setSearchValues = (type, value) => {\n  return {\n    type: SET_SEARCH_VALUE,\n    payload: {\n      type,\n      value\n    }\n  };\n};","map":{"version":3,"sources":["/home/saidi/Desktop/TAYLOR+GOODS/frontend/src/actions/index.js"],"names":["axios","featuredEndP","toast","FETCH_ITEMS_REQUEST","FETCH_ITEMS_SUCCESS","FETCH_NEW_ITEMS_SUCCESS","FETCH_ITEMS_FAILURE","FETCH_CATEGORIES_REQUEST","FETCH_CATEGORIES_SUCCESS","FETCH_CATEGORIES_FAILURE","UPDATE_STORE_REQUEST","UPDATE_STORE_SUCCESS","UPDATE_STORE_FAILURE","ADD_ITEM","UPDATE_CART_ITEM","REMOVE_CART_ITEM","REMOVE_WISHLIST_ITEM","SHOW_LOADING","HIDE_LOADING","SET_SEARCH_VALUE","API_URL","PRODUCT_FETCH_LIMIT","fetchProducts","endpoint","isNew","dispatch","getState","start","products","length","limit","actionType","URL","type","data","get","payload","container","items","map","id","name","description","category","image","size","price","toFixed","err","error","fetchCategories","total","updateCartItem","item","setTimeout","updateStore","itemID","itemSize","quantity","newSize","element","value","put","addItem","cart","some","updatedItem","removeCartItem","removeWishlistItem","setSearchValues"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { featuredEndP } from 'helpers/endpoints';\nimport { toast } from 'react-toastify';\n\nexport const FETCH_ITEMS_REQUEST = 'FETCH_ITEMS_REQUEST';\nexport const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS';\nexport const FETCH_NEW_ITEMS_SUCCESS = 'FETCH_NEW_ITEMS_SUCCESS';\nexport const FETCH_ITEMS_FAILURE = 'FETCH_ITEMS_FAILURE';\n\nexport const FETCH_CATEGORIES_REQUEST = 'FETCH_CATEGORIES_REQUEST';\nexport const FETCH_CATEGORIES_SUCCESS = 'FETCH_CATEGORIES_SUCCESS';\nexport const FETCH_CATEGORIES_FAILURE = 'FETCH_CATEGORIES_FAILURE';\n\nexport const UPDATE_STORE_REQUEST = 'UPDATE_STORE_REQUEST';\nexport const UPDATE_STORE_SUCCESS = 'UPDATE_STORE_SUCCESS';\nexport const UPDATE_STORE_FAILURE = 'UPDATE_STORE_FAILURE';\n\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const UPDATE_CART_ITEM = 'UPDATE_CART_ITEM';\n\nexport const REMOVE_CART_ITEM = 'REMOVE_CART_ITEM';\nexport const REMOVE_WISHLIST_ITEM = 'REMOVE_WISHLIST_ITEM';\n\nexport const SHOW_LOADING = 'SHOW_LOADING';\nexport const HIDE_LOADING = 'HIDE_LOADING';\nexport const SET_SEARCH_VALUE = 'SET_SEARCH_VALUE';\n\nexport const API_URL = `http://localhost:5000/api`;\nexport const PRODUCT_FETCH_LIMIT = 12;\n\nexport const fetchProducts = (endpoint = '/products', isNew = false) => async (\n  dispatch,\n  getState,\n) => {\n  const start = isNew ? getState().products.length : 0;\n  const limit = isNew\n    ? getState().products.length + PRODUCT_FETCH_LIMIT\n    : PRODUCT_FETCH_LIMIT;\n\n  const actionType = isNew ? FETCH_NEW_ITEMS_SUCCESS : FETCH_ITEMS_SUCCESS;\n\n  const URL =\n    endpoint === featuredEndP\n      ? `${API_URL}/products?${endpoint}`\n      : `${API_URL}/products?_start=${start}&_limit=${limit + endpoint}`;\n\n\n  dispatch({ type: FETCH_ITEMS_REQUEST });\n  try {\n    const { data } = await axios.get(URL);\n    dispatch({\n      type: actionType,\n      payload: {\n        container: endpoint === featuredEndP ? 'featured' : 'products',\n        items: data.map(\n          ({ id, name, description, category, image, size, price }) => ({\n            id,\n            name,\n            description,\n            category: category.name,\n            image,\n            size,\n            price: price.toFixed(2),\n          }),\n        ),\n      },\n    });\n  } catch (err) {\n    toast.error(`Could not fetch items!`);\n    dispatch({ type: FETCH_ITEMS_FAILURE, payload: err });\n  }\n};\n\nexport const fetchCategories = () => async dispatch => {\n  dispatch({ type: FETCH_CATEGORIES_REQUEST });\n  try {\n    const { data } = await axios.get(`${API_URL}/categories`);\n    dispatch({\n      type: FETCH_CATEGORIES_SUCCESS,\n      payload: data.map(({ name, total }) => ({ name, total })),\n    });\n  } catch (err) {\n    toast.error(`Could not fetch categories!`);\n    dispatch({ type: FETCH_CATEGORIES_FAILURE, payload: err });\n  }\n};\n\nexport const updateCartItem = item => dispatch => {\n  dispatch({ type: SHOW_LOADING, payload: 700 });\n  setTimeout(() => {\n    dispatch({\n      type: UPDATE_CART_ITEM,\n      payload: item,\n    });\n    dispatch({ type: HIDE_LOADING });\n  }, 700);\n};\n\nexport const updateStore = (itemID, itemSize, quantity) => async dispatch => {\n  dispatch({ type: UPDATE_STORE_REQUEST, payload: 3500 });\n  try {\n    const {\n      data: { size },\n    } = await axios.get(`${API_URL}/products/${itemID}`);\n    const newSize = size.map(element =>\n      element.value === itemSize\n        ? { ...element, limit: element.limit - quantity }\n        : element,\n    );\n    await axios.put(`${API_URL}/products/${itemID}`, {\n      size: newSize,\n    });\n    setTimeout(() => {\n      dispatch({ type: UPDATE_STORE_SUCCESS });\n      dispatch(fetchProducts(featuredEndP));\n    }, 3500);\n  } catch (err) {\n    toast.error(`Something went wrong!`);\n    dispatch({ type: UPDATE_STORE_FAILURE, payload: err });\n  }\n};\n\nexport const addItem = (item, container) => (dispatch, getState) => {\n  if (\n    getState().cart.some(({ id, name }) => id === item.id && name === item.name)\n  ) {\n    const updatedItem = {\n      ...item,\n      quantity: item.quantity + 1,\n    };\n    dispatch(updateCartItem(updatedItem));\n  } else {\n    dispatch({ type: SHOW_LOADING, payload: 1500 });\n    setTimeout(() => {\n      dispatch({\n        type: ADD_ITEM,\n        payload: {\n          item,\n          container,\n        },\n      });\n      dispatch({ type: HIDE_LOADING });\n    }, 1500);\n  }\n};\n\nexport const removeCartItem = (itemID, container, size = '') => dispatch => {\n  dispatch({ type: SHOW_LOADING, payload: 1000 });\n  setTimeout(() => {\n    dispatch({\n      type: REMOVE_CART_ITEM,\n      payload: {\n        itemID,\n        size,\n        container,\n      },\n    });\n    dispatch({ type: HIDE_LOADING });\n  }, 1000);\n};\n\n\n\nexport const removeWishlistItem = itemID => dispatch => {\n  dispatch({ type: SHOW_LOADING, payload: 600 });\n  setTimeout(() => {\n    dispatch({\n      type: REMOVE_WISHLIST_ITEM,\n      payload: {\n        itemID,\n      },\n    });\n    dispatch({ type: HIDE_LOADING });\n  }, 600);\n};\n\nexport const setSearchValues = (type, value) => {\n  return {\n    type: SET_SEARCH_VALUE,\n    payload: {\n      type,\n      value,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}